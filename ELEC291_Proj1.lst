                  2   $LIST
0000              4   
0000              5   org 0000H
0000 020891       6      ljmp MyProgram
0003              7      
000B              8   org 0x000B
000B 020883       9            ljmp Timer0_ISR
000E             10   ; Timer/Counter 2 overflow interrupt vector
002B             11   org 0x002B
002B 020829      12            ljmp Timer2_ISR
002E             13   
002E             14   ; These register definitions needed by 'math32.inc'
0030             15   DSEG at 30H
0030             16   x:   ds 4
0034             17   y:   ds 4
0038             18   z:   ds 4
003C             19   bcd: ds 5
0041             20   T2ov: ds 2 ; 16-bit timer 2 overflow (to measure the period of very slow signals)
0043             21   Seed: ds 4
0047             22   p1Score: ds 1
0048             23   p2Score: ds 1
0049             24   capacitance: ds 4
004D             25   
004D             26   
0000             27   BSEG
0000             28   mf: dbit 1
0001             29   
                570   $LIST
                 31   $LIST
02C4             33   
02C4             34   cseg
02C4             35   ; These 'equ' must match the hardware wiring
02C4             36   LCD_RS equ P3.2
02C4             37   ;LCD_RW equ PX.X ; Not used in this code, connect the pin to GND
02C4             38   LCD_E  equ P3.3
02C4             39   LCD_D4 equ P3.4
02C4             40   LCD_D5 equ P3.5
02C4             41   LCD_D6 equ P3.6
02C4             42   LCD_D7 equ P3.7
02C4             43   
                 45   	$LIST
0370             47   
0370             48   ;Music Frequencies
0370             49   TIMER0_RATE_B3  EQU 247 
0370             50   TIMER0_RATE_C4  EQU 262 
0370             51   TIMER0_RATE_CS4  EQU     277
0370             52   TIMER0_RATE_D4  EQU 294
0370             53   TIMER0_RATE_DS4 EQU 311
0370             54   TIMER0_RATE_E4  EQU 330
0370             55   TIMER0_RATE_F4  EQU 350
0370             56   TIMER0_RATE_FS4 EQU 370
0370             57   TIMER0_RATE_G4  EQU 390
0370             58   TIMER0_RATE_GS4 EQU 415
0370             59   TIMER0_RATE_A4   EQU 440
0370             60   TIMER0_RATE_AS4 EQU 466
0370             61   TIMER0_RATE_B4  EQU 494
0370             62    
0370             63   TIMER0_RATE_C5  EQU 523 
0370             64   TIMER0_RATE_CS5  EQU     554
0370             65   TIMER0_RATE_D5  EQU 587
0370             66   TIMER0_RATE_DS5 EQU 622
0370             67   TIMER0_RATE_E5  EQU 659
0370             68   TIMER0_RATE_F5  EQU 698
0370             69   TIMER0_RATE_FS5 EQU 740
0370             70   TIMER0_RATE_G5  EQU 784
0370             71   TIMER0_RATE_GS5 EQU 831
0370             72   TIMER0_RATE_A5   EQU 880
0370             73   TIMER0_RATE_AS5 EQU 932
0370             74   TIMER0_RATE_B5  EQU 988 
0370             75   
0370             76   TIMER0_RATE_C6  EQU 1047
0370             77   
0370             78   
0370             79   
0370             80   
0370             81   CLK           EQU 22118400 ; Microcontroller system crystal frequency in Hz
0370             82   TIMER0_OFF_RATE    EQU 65536
0370             83   TIMER0_OFF_RELOAD EQU ((65536-(CLK/TIMER0_OFF_RATE)))
0370             84   TIMER0_RATE   EQU 783     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0370             85   TIMER0_RATE_HIGH EQU 4096
0370             86   TIMER0_RATE_LOW EQU 1000
0370             87   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0370             88   TIMER0_RELOAD_HIGH EQU ((65536-(CLK/TIMER0_RATE_HIGH)))
0370             89   TIMER2_RATE   EQU 1000     ; 1000Hz, for a timer tick of 1ms
0370             90   ;Timer0_Rate used to change pitch
0370             91   TIMER2_RELOAD EQU ((65536-(CLK/TIMER2_RATE)))
0370             92   
0370             93   ;Music Frequencies
0370             94   TIMER0_RATE_A   EQU 440 
0370             95   TIMER0_RATE_E   EQU 659 
0370             96   TIMER0_RATE_GH  EQU 784 
0370             97   TIMER0_RATE_GL  EQU 392 
0370             98   TIMER0_RATE_D   EQU 587 
0370             99   TIMER0_RATE_B   EQU 493 
0370            100   
0370            101   TIMER0_RELOAD_A EQU ((65536-(CLK/TIMER0_RATE_A)))
0370            102   TIMER0_RELOAD_E EQU ((65536-(CLK/TIMER0_RATE_E)))
0370            103   TIMER0_RELOAD_GH EQU ((65536-(CLK/TIMER0_RATE_GH)))
0370            104   TIMER0_RELOAD_GL EQU ((65536-(CLK/TIMER0_RATE_GL)))
0370            105   TIMER0_RELOAD_D EQU ((65536-(CLK/TIMER0_RATE_D)))
0370            106   TIMER0_RELOAD_B EQU ((65536-(CLK/TIMER0_RATE_B)))
0370            107   
0370            108   
0370            109   ;New Frequencies
0370            110   
0370            111   
0370            112   
0370            113   
0370            114   
0370            115   ;Music frequency add
0370            116   TIMER0_RELOAD_B3         EQU ((65536-(CLK/TIMER0_RATE_B3)))
0370            117   TIMER0_RELOAD_C4         EQU ((65536-(CLK/TIMER0_RATE_C4)))
0370            118   TIMER0_RELOAD_CS4        EQU ((65536-(CLK/TIMER0_RATE_CS4)))
0370            119   TIMER0_RELOAD_D4         EQU ((65536-(CLK/TIMER0_RATE_D4)))
0370            120   TIMER0_RELOAD_DS4        EQU ((65536-(CLK/TIMER0_RATE_DS4)))
0370            121   TIMER0_RELOAD_E4         EQU ((65536-(CLK/TIMER0_RATE_E4)))
0370            122   TIMER0_RELOAD_F4         EQU ((65536-(CLK/TIMER0_RATE_F4)))
0370            123   TIMER0_RELOAD_FS4        EQU ((65536-(CLK/TIMER0_RATE_FS4)))
0370            124   TIMER0_RELOAD_G4         EQU ((65536-(CLK/TIMER0_RATE_G4)))
0370            125   TIMER0_RELOAD_GS4        EQU ((65536-(CLK/TIMER0_RATE_GS4)))
0370            126   TIMER0_RELOAD_A4         EQU ((65536-(CLK/TIMER0_RATE_A4)))
0370            127   TIMER0_RELOAD_AS4        EQU ((65536-(CLK/TIMER0_RATE_AS4)))
0370            128   TIMER0_RELOAD_B4         EQU ((65536-(CLK/TIMER0_RATE_B4)))
0370            129   
0370            130   TIMER0_RELOAD_C5         EQU ((65536-(CLK/TIMER0_RATE_C5)))
0370            131   TIMER0_RELOAD_CS5        EQU ((65536-(CLK/TIMER0_RATE_CS5)))
0370            132   TIMER0_RELOAD_D5         EQU ((65536-(CLK/TIMER0_RATE_D5)))
0370            133   TIMER0_RELOAD_DS5        EQU ((65536-(CLK/TIMER0_RATE_DS5)))
0370            134   TIMER0_RELOAD_E5         EQU ((65536-(CLK/TIMER0_RATE_E5)))
0370            135   TIMER0_RELOAD_F5         EQU ((65536-(CLK/TIMER0_RATE_F5)))
0370            136   TIMER0_RELOAD_FS5        EQU ((65536-(CLK/TIMER0_RATE_FS5)))
0370            137   TIMER0_RELOAD_G5         EQU ((65536-(CLK/TIMER0_RATE_G5)))
0370            138   TIMER0_RELOAD_GS5        EQU ((65536-(CLK/TIMER0_RATE_GS5)))
0370            139   TIMER0_RELOAD_A5         EQU ((65536-(CLK/TIMER0_RATE_A5)))
0370            140   TIMER0_RELOAD_AS5        EQU ((65536-(CLK/TIMER0_RATE_AS5)))
0370            141   TIMER0_RELOAD_B5         EQU ((65536-(CLK/TIMER0_RATE_B5)))
0370            142   
0370            143   TIMER0_RELOAD_C6         EQU ((65536-(CLK/TIMER0_RATE_C6)))
0370            144   
0370            145   
0370            146   
0370            147   cseg
0370            148   
0370            149   SOUND_OUT equ P1.1
0370            150   SOUND_OUT1 equ P2.3
0370            151   Player_One equ P2.1
0370            152   Player_Two equ P0.0
0370            153   
0370            154   
0370            155   ;                        1234567890123456    <- This helps determine the location of the counter
0370 50312020   156   Initial_Message:         db 'P1            P2', 0
     20202020
     20202020
     20205032
     00
0381 30302020   157   Overflow_Str:            db '00           00', 0
     20202020
     20202020
     20303000
0391 506C6179   158   Player_One_Text:         db 'Player 1: ', 0
     65722031
     3A2000
039C 506C6179   159   Player_Two_Text:         db 'Player 2: ',0
     65722032
     3A2000
03A7 436F6E67   160   Player_Win1:             db 'Congratulations ', 0
     72617475
     6C617469
     6F6E7320
     00
03B8 506C6179   161   Player_One_Win2:         db 'Player1 wins!   ', 0
     65723120
     77696E73
     21202020
     00
03C9 506C6179   162   Player_Two_Win2:         db 'Player2 wins!   ', 0
     65723220
     77696E73
     21202020
     00
03DA 20202020   163   You_Win1:                        db '    You Win!    ', 0
     596F7520
     57696E21
     20202020
     00
03EB 5374696C   164   You_Win2:                        db 'Still no friends', 0
     6C206E6F
     20667269
     656E6473
     00
03FC 20202020   165   Ready_Str:                       db '     Ready?     ', 0
     20526561
     64793F20
     20202020
     00
040D 20202020   166   Ready_3:                         db '       3        ', 0
     20202033
     20202020
     20202020
     00
041E 20202020   167   Ready_2:                         db '       2        ', 0
     20202032
     20202020
     20202020
     00
042F 20202020   168   Ready_1:                         db '       1        ', 0
     20202031
     20202020
     20202020
     00
0440 20202020   169   Go:                              db '      Go!       ', 0
     2020476F
     21202020
     20202020
     00
0451 20202050   170   Play_Again:                      db '   Play Again?  ', 0
     6C617920
     41676169
     6E3F2020
     00
0462 20202050   171   Hit_Reset:                       db '   Press Reset  ', 0
     72657373
     20526573
     65742020
     00
0473 20202020   172   Clear_Screen:            db '                ', 0
     20202020
     20202020
     20202020
     00
0484 204F6E65   173   One_Player_Message: db ' One Player? Or ', 0
     20506C61
     7965723F
     204F7220
     00
0495 20202054   174   Two_Player_Message: db '   Two Player?  ', 0
     776F2050
     6C617965
     723F2020
     00
04A6 50312020   175   Initial_Message_P1: db 'P1              ', 0
     20202020
     20202020
     20202020
     00
04B7            176   
04B7 5700       177   L_W:                                     db 'W', 0
04B9 4500       178   L_E:                                     db 'E', 0
04BB 4C00       179   L_L:                                     db 'L', 0
04BD 4300       180   L_C:                                     db 'C', 0
04BF 4F00       181   L_O:                                     db 'O', 0
04C1 4D00       182   L_M:                                     db 'M', 0
04C3 5400       183   L_T:                                     db 'T', 0
04C5 5300       184   L_S:                                     db 'S', 0
04C7 4100       185   L_A:                                     db 'A', 0
04C9 5000       186   L_P:                                     db 'P', 0
04CB 4400       187   L_D:                                     db 'D', 0
04CD 2D00       188   L_Dash:                                  db '-', 0
04CF            189   
04CF            190   
04CF            191   ; Sends 10-digit BCD number in bcd to the LCD
04CF            192   Display_10_digit_BCD:
04CF C000       193            push ar0
04D1 A840       193            mov r0, bcd+4
04D3 12035A     193            lcall ?Display_BCD
04D6 D000       193            pop ar0
04D8 C000       194            push ar0
04DA A83F       194            mov r0, bcd+3
04DC 12035A     194            lcall ?Display_BCD
04DF D000       194            pop ar0
04E1 C000       195            push ar0
04E3 A83E       195            mov r0, bcd+2
04E5 12035A     195            lcall ?Display_BCD
04E8 D000       195            pop ar0
04EA C000       196            push ar0
04EC A83D       196            mov r0, bcd+1
04EE 12035A     196            lcall ?Display_BCD
04F1 D000       196            pop ar0
04F3 C000       197            push ar0
04F5 A83C       197            mov r0, bcd+0
04F7 12035A     197            lcall ?Display_BCD
04FA D000       197            pop ar0
04FC 22         198            ret
04FD            199   
04FD            200   TIMER0_RATE_B3_Init:
04FD E589       201            mov a, TMOD
04FF 54F0       202            anl a, #0xf0 ; Clear the bits for timer 0
0501 4401       203            orl a, #0x01 ; Configure timer 0 as 16-timer
0503 F589       204            mov TMOD, a
0505 758CA3     205            mov TH0, #high(TIMER0_RELOAD_B3)
0508 758A34     206            mov TL0, #low(TIMER0_RELOAD_B3)
050B            207            ; Set autoreload value
050B 75F4A3     208            mov RH0, #high(TIMER0_RELOAD_B3)
050E 75F234     209            mov RL0, #low(TIMER0_RELOAD_B3)
0511            210            ; Enable the timer and interrupts
0511 D2A9       211       setb ET0  ; Enable timer 0 interrupt
0513 D28C       212       setb TR0  ; Start timer 0
0515 22         213            ret
0516            214   
0516            215   TIMER0_RATE_C4_Init:
0516 E589       216            mov a, TMOD
0518 54F0       217            anl a, #0xf0 ; Clear the bits for timer 0
051A 4401       218            orl a, #0x01 ; Configure timer 0 as 16-timer
051C F589       219            mov TMOD, a
051E 758CB7     220            mov TH0, #high(TIMER0_RELOAD_C4)
0521 758A3B     221            mov TL0, #low(TIMER0_RELOAD_C4)
0524            222            ; Set autoreload value
0524 75F4B7     223            mov RH0, #high(TIMER0_RELOAD_C4)
0527 75F23B     224            mov RL0, #low(TIMER0_RELOAD_C4)
052A            225            ; Enable the timer and interrupts
052A D2A9       226       setb ET0  ; Enable timer 0 interrupt
052C D28C       227       setb TR0  ; Start timer 0
052E 22         228            ret
052F            229   
052F            230   TIMER0_RATE_CS4_Init:
052F E589       231            mov a, TMOD
0531 54F0       232            anl a, #0xf0 ; Clear the bits for timer 0
0533 4401       233            orl a, #0x01 ; Configure timer 0 as 16-timer
0535 F589       234            mov TMOD, a
0537 758CC9     235            mov TH0, #high(TIMER0_RELOAD_CS4)
053A 758A17     236            mov TL0, #low(TIMER0_RELOAD_CS4)
053D            237            ; Set autoreload value
053D 75F4C9     238            mov RH0, #high(TIMER0_RELOAD_CS4)
0540 75F217     239            mov RL0, #low(TIMER0_RELOAD_CS4)
0543            240            ; Enable the timer and interrupts
0543 D2A9       241       setb ET0  ; Enable timer 0 interrupt
0545 D28C       242       setb TR0  ; Start timer 0
0547 22         243            ret
0548            244            
0548            245   TIMER0_RATE_D4_Init:
0548 E589       246            mov a, TMOD
054A 54F0       247            anl a, #0xf0 ; Clear the bits for timer 0
054C 4401       248            orl a, #0x01 ; Configure timer 0 as 16-timer
054E F589       249            mov TMOD, a
0550 758CDB     250            mov TH0, #high(TIMER0_RELOAD_D4)
0553 758A20     251            mov TL0, #low(TIMER0_RELOAD_D4)
0556            252            ; Set autoreload value
0556 75F4DB     253            mov RH0, #high(TIMER0_RELOAD_D4)
0559 75F220     254            mov RL0, #low(TIMER0_RELOAD_D4)
055C            255            ; Enable the timer and interrupts
055C D2A9       256       setb ET0  ; Enable timer 0 interrupt
055E D28C       257       setb TR0  ; Start timer 0
0560 22         258            ret
0561            259   
0561            260   TIMER0_RATE_DS4_Init:
0561 E589       261            mov a, TMOD
0563 54F0       262            anl a, #0xf0 ; Clear the bits for timer 0
0565 4401       263            orl a, #0x01 ; Configure timer 0 as 16-timer
0567 F589       264            mov TMOD, a
0569 758CEB     265            mov TH0, #high(TIMER0_RELOAD_DS4)
056C 758A30     266            mov TL0, #low(TIMER0_RELOAD_DS4)
056F            267            ; Set autoreload value
056F 75F4EB     268            mov RH0, #high(TIMER0_RELOAD_DS4)
0572 75F230     269            mov RL0, #low(TIMER0_RELOAD_DS4)
0575            270            ; Enable the timer and interrupts
0575 D2A9       271       setb ET0  ; Enable timer 0 interrupt
0577 D28C       272       setb TR0  ; Start timer 0
0579 22         273            ret
057A            274   
057A            275   TIMER0_RATE_E4_Init:
057A E589       276            mov a, TMOD
057C 54F0       277            anl a, #0xf0 ; Clear the bits for timer 0
057E 4401       278            orl a, #0x01 ; Configure timer 0 as 16-timer
0580 F589       279            mov TMOD, a
0582 758CFB     280            mov TH0, #high(TIMER0_RELOAD_E4)
0585 758A2F     281            mov TL0, #low(TIMER0_RELOAD_E4)
0588            282            ; Set autoreload value
0588 75F4FB     283            mov RH0, #high(TIMER0_RELOAD_E4)
058B 75F22F     284            mov RL0, #low(TIMER0_RELOAD_E4)
058E            285            ; Enable the timer and interrupts
058E D2A9       286       setb ET0  ; Enable timer 0 interrupt
0590 D28C       287       setb TR0  ; Start timer 0
0592 22         288            ret
0593            289            
0593            290   TIMER0_RATE_F4_Init:
0593 E589       291            mov a, TMOD
0595 54F0       292            anl a, #0xf0 ; Clear the bits for timer 0
0597 4401       293            orl a, #0x01 ; Configure timer 0 as 16-timer
0599 F589       294            mov TMOD, a
059B 758C09     295            mov TH0, #high(TIMER0_RELOAD_F4)
059E 758A25     296            mov TL0, #low(TIMER0_RELOAD_F4)
05A1            297            ; Set autoreload value
05A1 75F409     298            mov RH0, #high(TIMER0_RELOAD_F4)
05A4 75F225     299            mov RL0, #low(TIMER0_RELOAD_F4)
05A7            300            ; Enable the timer and interrupts
05A7 D2A9       301       setb ET0  ; Enable timer 0 interrupt
05A9 D28C       302       setb TR0  ; Start timer 0
05AB 22         303            ret
05AC            304            
05AC            305   TIMER0_RATE_FS4_Init:
05AC E589       306            mov a, TMOD
05AE 54F0       307            anl a, #0xf0 ; Clear the bits for timer 0
05B0 4401       308            orl a, #0x01 ; Configure timer 0 as 16-timer
05B2 F589       309            mov TMOD, a
05B4 758C16     310            mov TH0, #high(TIMER0_RELOAD_FS4)
05B7 758A7D     311            mov TL0, #low(TIMER0_RELOAD_FS4)
05BA            312            ; Set autoreload value
05BA 75F416     313            mov RH0, #high(TIMER0_RELOAD_FS4)
05BD 75F27D     314            mov RL0, #low(TIMER0_RELOAD_FS4)
05C0            315            ; Enable the timer and interrupts
05C0 D2A9       316       setb ET0  ; Enable timer 0 interrupt
05C2 D28C       317       setb TR0  ; Start timer 0
05C4 22         318            ret
05C5            319            
05C5            320   TIMER0_RATE_G4_Init:
05C5 E589       321            mov a, TMOD
05C7 54F0       322            anl a, #0xf0 ; Clear the bits for timer 0
05C9 4401       323            orl a, #0x01 ; Configure timer 0 as 16-timer
05CB F589       324            mov TMOD, a
05CD 758C22     325            mov TH0, #high(TIMER0_RELOAD_G4)
05D0 758A77     326            mov TL0, #low(TIMER0_RELOAD_G4)
05D3            327            ; Set autoreload value
05D3 75F422     328            mov RH0, #high(TIMER0_RELOAD_G4)
05D6 75F277     329            mov RL0, #low(TIMER0_RELOAD_G4)
05D9            330            ; Enable the timer and interrupts
05D9 D2A9       331       setb ET0  ; Enable timer 0 interrupt
05DB D28C       332       setb TR0  ; Start timer 0
05DD 22         333            ret
05DE            334            
05DE            335   TIMER0_RATE_GS4_Init:
05DE E589       336            mov a, TMOD
05E0 54F0       337            anl a, #0xf0 ; Clear the bits for timer 0
05E2 4401       338            orl a, #0x01 ; Configure timer 0 as 16-timer
05E4 F589       339            mov TMOD, a
05E6 758C2F     340            mov TH0, #high(TIMER0_RELOAD_GS4)
05E9 758ACF     341            mov TL0, #low(TIMER0_RELOAD_GS4)
05EC            342            ; Set autoreload value
05EC 75F42F     343            mov RH0, #high(TIMER0_RELOAD_GS4)
05EF 75F2CF     344            mov RL0, #low(TIMER0_RELOAD_GS4)
05F2            345            ; Enable the timer and interrupts
05F2 D2A9       346       setb ET0  ; Enable timer 0 interrupt
05F4 D28C       347       setb TR0  ; Start timer 0
05F6 22         348            ret
05F7            349            
05F7            350   TIMER0_RATE_A4_Init:
05F7 E589       351            mov a, TMOD
05F9 54F0       352            anl a, #0xf0 ; Clear the bits for timer 0
05FB 4401       353            orl a, #0x01 ; Configure timer 0 as 16-timer
05FD F589       354            mov TMOD, a
05FF 758C3B     355            mov TH0, #high(TIMER0_RELOAD_A4)
0602 758AA3     356            mov TL0, #low(TIMER0_RELOAD_A4)
0605            357            ; Set autoreload value
0605 75F43B     358            mov RH0, #high(TIMER0_RELOAD_A4)
0608 75F2A3     359            mov RL0, #low(TIMER0_RELOAD_A4)
060B            360            ; Enable the timer and interrupts
060B D2A9       361       setb ET0  ; Enable timer 0 interrupt
060D D28C       362       setb TR0  ; Start timer 0
060F 22         363            ret
0610            364            
0610            365   TIMER0_RATE_AS4_Init:
0610 E589       366            mov a, TMOD
0612 54F0       367            anl a, #0xf0 ; Clear the bits for timer 0
0614 4401       368            orl a, #0x01 ; Configure timer 0 as 16-timer
0616 F589       369            mov TMOD, a
0618 758C46     370            mov TH0, #high(TIMER0_RELOAD_AS4)
061B 758A98     371            mov TL0, #low(TIMER0_RELOAD_AS4)
061E            372            ; Set autoreload value
061E 75F446     373            mov RH0, #high(TIMER0_RELOAD_AS4)
0621 75F298     374            mov RL0, #low(TIMER0_RELOAD_AS4)
0624            375            ; Enable the timer and interrupts
0624 D2A9       376       setb ET0  ; Enable timer 0 interrupt
0626 D28C       377       setb TR0  ; Start timer 0
0628 22         378            ret
0629            379            
0629            380   TIMER0_RATE_B4_Init:
0629 E589       381            mov a, TMOD
062B 54F0       382            anl a, #0xf0 ; Clear the bits for timer 0
062D 4401       383            orl a, #0x01 ; Configure timer 0 as 16-timer
062F F589       384            mov TMOD, a
0631 758C51     385            mov TH0, #high(TIMER0_RELOAD_B4)
0634 758A1A     386            mov TL0, #low(TIMER0_RELOAD_B4)
0637            387            ; Set autoreload value
0637 75F451     388            mov RH0, #high(TIMER0_RELOAD_B4)
063A 75F21A     389            mov RL0, #low(TIMER0_RELOAD_B4)
063D            390            ; Enable the timer and interrupts
063D D2A9       391       setb ET0  ; Enable timer 0 interrupt
063F D28C       392       setb TR0  ; Start timer 0
0641 22         393            ret
0642            394            
0642            395   TIMER0_RATE_C5_Init:
0642 E589       396            mov a, TMOD
0644 54F0       397            anl a, #0xf0 ; Clear the bits for timer 0
0646 4401       398            orl a, #0x01 ; Configure timer 0 as 16-timer
0648 F589       399            mov TMOD, a
064A 758C5A     400            mov TH0, #high(TIMER0_RELOAD_C5)
064D 758ACD     401            mov TL0, #low(TIMER0_RELOAD_C5)
0650            402            ; Set autoreload value
0650 75F45A     403            mov RH0, #high(TIMER0_RELOAD_C5)
0653 75F2CD     404            mov RL0, #low(TIMER0_RELOAD_C5)
0656            405            ; Enable the timer and interrupts
0656 D2A9       406       setb ET0  ; Enable timer 0 interrupt
0658 D28C       407       setb TR0  ; Start timer 0
065A 22         408            ret
065B            409            
065B            410   TIMER0_RATE_CS5_Init:
065B E589       411            mov a, TMOD
065D 54F0       412            anl a, #0xf0 ; Clear the bits for timer 0
065F 4401       413            orl a, #0x01 ; Configure timer 0 as 16-timer
0661 F589       414            mov TMOD, a
0663 758C64     415            mov TH0, #high(TIMER0_RELOAD_CS5)
0666 758A0C     416            mov TL0, #low(TIMER0_RELOAD_CS5)
0669            417            ; Set autoreload value
0669 75F464     418            mov RH0, #high(TIMER0_RELOAD_CS5)
066C 75F20C     419            mov RL0, #low(TIMER0_RELOAD_CS5)
066F            420            ; Enable the timer and interrupts
066F D2A9       421       setb ET0  ; Enable timer 0 interrupt
0671 D28C       422       setb TR0  ; Start timer 0
0673 22         423            ret
0674            424            
0674            425   TIMER0_RATE_D5_Init:
0674 E589       426            mov a, TMOD
0676 54F0       427            anl a, #0xf0 ; Clear the bits for timer 0
0678 4401       428            orl a, #0x01 ; Configure timer 0 as 16-timer
067A F589       429            mov TMOD, a
067C 758C6C     430            mov TH0, #high(TIMER0_RELOAD_D5)
067F 758AD0     431            mov TL0, #low(TIMER0_RELOAD_D5)
0682            432            ; Set autoreload value
0682 75F46C     433            mov RH0, #high(TIMER0_RELOAD_D5)
0685 75F2D0     434            mov RL0, #low(TIMER0_RELOAD_D5)
0688            435            ; Enable the timer and interrupts
0688 D2A9       436       setb ET0  ; Enable timer 0 interrupt
068A D28C       437       setb TR0  ; Start timer 0
068C 22         438            ret
068D            439            
068D            440   TIMER0_RATE_DS5_Init:
068D E589       441            mov a, TMOD
068F 54F0       442            anl a, #0xf0 ; Clear the bits for timer 0
0691 4401       443            orl a, #0x01 ; Configure timer 0 as 16-timer
0693 F589       444            mov TMOD, a
0695 758C75     445            mov TH0, #high(TIMER0_RELOAD_DS5)
0698 758A18     446            mov TL0, #low(TIMER0_RELOAD_DS5)
069B            447            ; Set autoreload value
069B 75F475     448            mov RH0, #high(TIMER0_RELOAD_DS5)
069E 75F218     449            mov RL0, #low(TIMER0_RELOAD_DS5)
06A1            450            ; Enable the timer and interrupts
06A1 D2A9       451       setb ET0  ; Enable timer 0 interrupt
06A3 D28C       452       setb TR0  ; Start timer 0
06A5 22         453            ret
06A6            454            
06A6            455   TIMER0_RATE_E5_Init:
06A6 E589       456            mov a, TMOD
06A8 54F0       457            anl a, #0xf0 ; Clear the bits for timer 0
06AA 4401       458            orl a, #0x01 ; Configure timer 0 as 16-timer
06AC F589       459            mov TMOD, a
06AE 758C7C     460            mov TH0, #high(TIMER0_RELOAD_E5)
06B1 758AE5     461            mov TL0, #low(TIMER0_RELOAD_E5)
06B4            462            ; Set autoreload value
06B4 75F47C     463            mov RH0, #high(TIMER0_RELOAD_E5)
06B7 75F2E5     464            mov RL0, #low(TIMER0_RELOAD_E5)
06BA            465            ; Enable the timer and interrupts
06BA D2A9       466       setb ET0  ; Enable timer 0 interrupt
06BC D28C       467       setb TR0  ; Start timer 0
06BE 22         468            ret
06BF            469            
06BF            470   TIMER0_RATE_F5_Init:
06BF E589       471            mov a, TMOD
06C1 54F0       472            anl a, #0xf0 ; Clear the bits for timer 0
06C3 4401       473            orl a, #0x01 ; Configure timer 0 as 16-timer
06C5 F589       474            mov TMOD, a
06C7 758C84     475            mov TH0, #high(TIMER0_RELOAD_F5)
06CA 758A38     476            mov TL0, #low(TIMER0_RELOAD_F5)
06CD            477            ; Set autoreload value
06CD 75F484     478            mov RH0, #high(TIMER0_RELOAD_F5)
06D0 75F238     479            mov RL0, #low(TIMER0_RELOAD_F5)
06D3            480            ; Enable the timer and interrupts
06D3 D2A9       481       setb ET0  ; Enable timer 0 interrupt
06D5 D28C       482       setb TR0  ; Start timer 0
06D7 22         483            ret
06D8            484            
06D8            485   TIMER0_RATE_FS5_Init:
06D8 E589       486            mov a, TMOD
06DA 54F0       487            anl a, #0xf0 ; Clear the bits for timer 0
06DC 4401       488            orl a, #0x01 ; Configure timer 0 as 16-timer
06DE F589       489            mov TMOD, a
06E0 758C8B     490            mov TH0, #high(TIMER0_RELOAD_FS5)
06E3 758A3F     491            mov TL0, #low(TIMER0_RELOAD_FS5)
06E6            492            ; Set autoreload value
06E6 75F48B     493            mov RH0, #high(TIMER0_RELOAD_FS5)
06E9 75F23F     494            mov RL0, #low(TIMER0_RELOAD_FS5)
06EC            495            ; Enable the timer and interrupts
06EC D2A9       496       setb ET0  ; Enable timer 0 interrupt
06EE D28C       497       setb TR0  ; Start timer 0
06F0 22         498            ret
06F1            499            
06F1            500   TIMER0_RATE_G5_Init:
06F1 E589       501            mov a, TMOD
06F3 54F0       502            anl a, #0xf0 ; Clear the bits for timer 0
06F5 4401       503            orl a, #0x01 ; Configure timer 0 as 16-timer
06F7 F589       504            mov TMOD, a
06F9 758C91     505            mov TH0, #high(TIMER0_RELOAD_G5)
06FC 758ACC     506            mov TL0, #low(TIMER0_RELOAD_G5)
06FF            507            ; Set autoreload value
06FF 75F491     508            mov RH0, #high(TIMER0_RELOAD_G5)
0702 75F2CC     509            mov RL0, #low(TIMER0_RELOAD_G5)
0705            510            ; Enable the timer and interrupts
0705 D2A9       511       setb ET0  ; Enable timer 0 interrupt
0707 D28C       512       setb TR0  ; Start timer 0
0709 22         513            ret
070A            514            
070A            515   TIMER0_RATE_GS5_Init:
070A E589       516            mov a, TMOD
070C 54F0       517            anl a, #0xf0 ; Clear the bits for timer 0
070E 4401       518            orl a, #0x01 ; Configure timer 0 as 16-timer
0710 F589       519            mov TMOD, a
0712 758C98     520            mov TH0, #high(TIMER0_RELOAD_GS5)
0715 758A08     521            mov TL0, #low(TIMER0_RELOAD_GS5)
0718            522            ; Set autoreload value
0718 75F498     523            mov RH0, #high(TIMER0_RELOAD_GS5)
071B 75F208     524            mov RL0, #low(TIMER0_RELOAD_GS5)
071E            525            ; Enable the timer and interrupts
071E D2A9       526       setb ET0  ; Enable timer 0 interrupt
0720 D28C       527       setb TR0  ; Start timer 0
0722 22         528            ret
0723            529            
0723            530   TIMER0_RATE_A5_Init:
0723 E589       531            mov a, TMOD
0725 54F0       532            anl a, #0xf0 ; Clear the bits for timer 0
0727 4401       533            orl a, #0x01 ; Configure timer 0 as 16-timer
0729 F589       534            mov TMOD, a
072B 758C9D     535            mov TH0, #high(TIMER0_RELOAD_A5)
072E 758AD2     536            mov TL0, #low(TIMER0_RELOAD_A5)
0731            537            ; Set autoreload value
0731 75F49D     538            mov RH0, #high(TIMER0_RELOAD_A5)
0734 75F2D2     539            mov RL0, #low(TIMER0_RELOAD_A5)
0737            540            ; Enable the timer and interrupts
0737 D2A9       541       setb ET0  ; Enable timer 0 interrupt
0739 D28C       542       setb TR0  ; Start timer 0
073B 22         543            ret
073C            544            
073C            545   TIMER0_RATE_AS5_Init:
073C E589       546            mov a, TMOD
073E 54F0       547            anl a, #0xf0 ; Clear the bits for timer 0
0740 4401       548            orl a, #0x01 ; Configure timer 0 as 16-timer
0742 F589       549            mov TMOD, a
0744 758CA3     550            mov TH0, #high(TIMER0_RELOAD_AS5)
0747 758A4C     551            mov TL0, #low(TIMER0_RELOAD_AS5)
074A            552            ; Set autoreload value
074A 75F4A3     553            mov RH0, #high(TIMER0_RELOAD_AS5)
074D 75F24C     554            mov RL0, #low(TIMER0_RELOAD_AS5)
0750            555            ; Enable the timer and interrupts
0750 D2A9       556       setb ET0  ; Enable timer 0 interrupt
0752 D28C       557       setb TR0  ; Start timer 0
0754 22         558            ret
0755            559            
0755            560            TIMER0_RATE_B5_Init:
0755 E589       561            mov a, TMOD
0757 54F0       562            anl a, #0xf0 ; Clear the bits for timer 0
0759 4401       563            orl a, #0x01 ; Configure timer 0 as 16-timer
075B F589       564            mov TMOD, a
075D 758CA8     565            mov TH0, #high(TIMER0_RELOAD_B5)
0760 758A8D     566            mov TL0, #low(TIMER0_RELOAD_B5)
0763            567            ; Set autoreload value
0763 75F4A8     568            mov RH0, #high(TIMER0_RELOAD_B5)
0766 75F28D     569            mov RL0, #low(TIMER0_RELOAD_B5)
0769            570            ; Enable the timer and interrupts
0769 D2A9       571       setb ET0  ; Enable timer 0 interrupt
076B D28C       572       setb TR0  ; Start timer 0
076D 22         573            ret
076E            574            
076E            575   TIMER0_RATE_C6_Init:
076E E589       576            mov a, TMOD
0770 54F0       577            anl a, #0xf0 ; Clear the bits for timer 0
0772 4401       578            orl a, #0x01 ; Configure timer 0 as 16-timer
0774 F589       579            mov TMOD, a
0776 758CAD     580            mov TH0, #high(TIMER0_RELOAD_C6)
0779 758A7B     581            mov TL0, #low(TIMER0_RELOAD_C6)
077C            582            ; Set autoreload value
077C 75F4AD     583            mov RH0, #high(TIMER0_RELOAD_C6)
077F 75F27B     584            mov RL0, #low(TIMER0_RELOAD_C6)
0782            585            ; Enable the timer and interrupts
0782 D2A9       586       setb ET0  ; Enable timer 0 interrupt
0784 D28C       587       setb TR0  ; Start timer 0
0786 22         588            ret
0787            589   
0787            590   TIMER0_RATE_B_Init:
0787 E589       591            mov a, TMOD
0789 54F0       592            anl a, #0xf0 ; Clear the bits for timer 0
078B 4401       593            orl a, #0x01 ; Configure timer 0 as 16-timer
078D F589       594            mov TMOD, a
078F 758C50     595            mov TH0, #high(TIMER0_RELOAD_B)
0792 758AC0     596            mov TL0, #low(TIMER0_RELOAD_B)
0795            597            ; Set autoreload value
0795 75F450     598            mov RH0, #high(TIMER0_RELOAD_B)
0798 75F2C0     599            mov RL0, #low(TIMER0_RELOAD_B)
079B            600            ; Enable the timer and interrupts
079B D2A9       601       setb ET0  ; Enable timer 0 interrupt
079D D28C       602       setb TR0  ; Start timer 0
079F 22         603            ret
07A0            604   
07A0            605   TIMER0_RATE_D_Init:
07A0 E589       606            mov a, TMOD
07A2 54F0       607            anl a, #0xf0 ; Clear the bits for timer 0
07A4 4401       608            orl a, #0x01 ; Configure timer 0 as 16-timer
07A6 F589       609            mov TMOD, a
07A8 758C6C     610            mov TH0, #high(TIMER0_RELOAD_D)
07AB 758AD0     611            mov TL0, #low(TIMER0_RELOAD_D)
07AE            612            ; Set autoreload value
07AE 75F46C     613            mov RH0, #high(TIMER0_RELOAD_D)
07B1 75F2D0     614            mov RL0, #low(TIMER0_RELOAD_D)
07B4            615            ; Enable the timer and interrupts
07B4 D2A9       616       setb ET0  ; Enable timer 0 interrupt
07B6 D28C       617       setb TR0  ; Start timer 0
07B8 22         618            ret
07B9            619   TIMER0_RATE_GL_Init:
07B9 E589       620            mov a, TMOD
07BB 54F0       621            anl a, #0xf0 ; Clear the bits for timer 0
07BD 4401       622            orl a, #0x01 ; Configure timer 0 as 16-timer
07BF F589       623            mov TMOD, a
07C1 758C23     624            mov TH0, #high(TIMER0_RELOAD_GL)
07C4 758A98     625            mov TL0, #low(TIMER0_RELOAD_GL)
07C7            626            ; Set autoreload value
07C7 75F423     627            mov RH0, #high(TIMER0_RELOAD_GL)
07CA 75F298     628            mov RL0, #low(TIMER0_RELOAD_GL)
07CD            629            ; Enable the timer and interrupts
07CD D2A9       630       setb ET0  ; Enable timer 0 interrupt
07CF D28C       631       setb TR0  ; Start timer 0
07D1 22         632            ret
07D2            633   
07D2            634   Timer0_RATE_E_Init:
07D2 E589       635            mov a, TMOD
07D4 54F0       636            anl a, #0xf0 ; Clear the bits for timer 0
07D6 4401       637            orl a, #0x01 ; Configure timer 0 as 16-timer
07D8 F589       638            mov TMOD, a
07DA 758C7C     639            mov TH0, #high(TIMER0_RELOAD_E)
07DD 758AE5     640            mov TL0, #low(TIMER0_RELOAD_E)
07E0            641            ; Set autoreload value
07E0 75F47C     642            mov RH0, #high(TIMER0_RELOAD_E)
07E3 75F2E5     643            mov RL0, #low(TIMER0_RELOAD_E)
07E6            644            ; Enable the timer and interrupts
07E6 D2A9       645       setb ET0  ; Enable timer 0 interrupt
07E8 D28C       646       setb TR0  ; Start timer 0
07EA 22         647            ret
07EB            648            
07EB            649   TIMER0_RATE_A_Init:
07EB E589       650            mov a, TMOD
07ED 54F0       651            anl a, #0xf0 ; Clear the bits for timer 0
07EF 4401       652            orl a, #0x01 ; Configure timer 0 as 16-timer
07F1 F589       653            mov TMOD, a
07F3 758C3B     654            mov TH0, #high(TIMER0_RELOAD_A)
07F6 758AA3     655            mov TL0, #low(TIMER0_RELOAD_A)
07F9            656            ; Set autoreload value
07F9 75F43B     657            mov RH0, #high(TIMER0_RELOAD_A)
07FC 75F2A3     658            mov RL0, #low(TIMER0_RELOAD_A)
07FF            659            ; Enable the timer and interrupts
07FF D2A9       660       setb ET0  ; Enable timer 0 interrupt
0801 D28C       661       setb TR0  ; Start timer 0
0803 22         662            ret
0804            663            
0804            664   TIMER0_RATE_GH_Init:
0804 E589       665            mov a, TMOD
0806 54F0       666            anl a, #0xf0 ; Clear the bits for timer 0
0808 4401       667            orl a, #0x01 ; Configure timer 0 as 16-timer
080A F589       668            mov TMOD, a
080C 758C91     669            mov TH0, #high(TIMER0_RELOAD_GH)
080F 758ACC     670            mov TL0, #low(TIMER0_RELOAD_GH)
0812            671            ; Set autoreload value
0812 75F491     672            mov RH0, #high(TIMER0_RELOAD_GH)
0815 75F2CC     673            mov RL0, #low(TIMER0_RELOAD_GH)
0818            674            ; Enable the timer and interrupts
0818 D2A9       675       setb ET0  ; Enable timer 0 interrupt
081A D28C       676       setb TR0  ; Start timer 0
081C 22         677            ret
081D            678   
081D            679   
081D            680   ;Initializes timer/counter 2 as a 16-bit timer
081D            681   InitTimer2:
081D 75C800     682            mov T2CON, #0 ; Stop timer/counter.  Set as timer (clock input is pin 22.1184MHz).
0820            683            ; Set the reload value on overflow to zero (just in case is not zero)
0820 75CB00     684            mov RCAP2H, #0
0823 75CA00     685            mov RCAP2L, #0
0826 D2AD       686            setb ET2
0828 22         687       ret
0829            688   
0829            689   Timer2_ISR:
0829 C2CF       690            clr TF2  ; Timer 2 doesn't clear TF2 automatically. Do it in ISR
082B C0E0       691            push acc
082D 0541       692            inc T2ov+0
082F E541       693            mov a, T2ov+0
0831 7002       694            jnz Timer2_ISR_done
0833 0542       695            inc T2ov+1
0835            696   Timer2_ISR_done:
0835 D0E0       697            pop acc
0837 32         698            reti
0838            699   
0838            700   Timer0_Init:
0838 E589       701            mov a, TMOD
083A 54F0       702            anl a, #0xf0 ; Clear the bits for timer 0
083C 4401       703            orl a, #0x01 ; Configure timer 0 as 16-timer
083E F589       704            mov TMOD, a
0840 758C91     705            mov TH0, #high(TIMER0_RELOAD)
0843 758AA8     706            mov TL0, #low(TIMER0_RELOAD)
0846            707            ; Set autoreload value
0846 75F491     708            mov RH0, #high(TIMER0_RELOAD)
0849 75F2A8     709            mov RL0, #low(TIMER0_RELOAD)
084C            710            ; Enable the timer and interrupts
084C D2A9       711       setb ET0  ; Enable timer 0 interrupt
084E D28C       712       setb TR0  ; Start timer 0
0850 22         713            ret
0851            714            
0851            715   Timer0_HIGH_Init:
0851 E589       716            mov a, TMOD
0853 54F0       717            anl a, #0xf0 ; Clear the bits for timer 0
0855 4401       718            orl a, #0x01 ; Configure timer 0 as 16-timer
0857 F589       719            mov TMOD, a
0859 758CEA     720            mov TH0, #high(TIMER0_RELOAD_HIGH)
085C 758AE8     721            mov TL0, #low(TIMER0_RELOAD_HIGH)
085F            722            ; Set autoreload value
085F 75F4EA     723            mov RH0, #high(TIMER0_RELOAD_HIGH)
0862 75F2E8     724            mov RL0, #low(TIMER0_RELOAD_HIGH)
0865            725            ; Enable the timer and interrupts
0865 D2A9       726       setb ET0  ; Enable timer 0 interrupt
0867 D28C       727       setb TR0  ; Start timer 0
0869 22         728            ret
086A            729   
086A            730   Timer0_OFF_Init:
086A E589       731            mov a, TMOD
086C 54F0       732            anl a, #0xf0 ; Clear the bits for timer 0
086E 4401       733            orl a, #0x01 ; Configure timer 0 as 16-timer
0870 F589       734            mov TMOD, a
0872 758CFE     735            mov TH0, #high(TIMER0_OFF_RELOAD)
0875 758AAF     736            mov TL0, #low(TIMER0_OFF_RELOAD)
0878            737            ; Set autoreload value
0878 75F4FE     738            mov RH0, #high(TIMER0_OFF_RELOAD)
087B 75F2AF     739            mov RL0, #low(TIMER0_OFF_RELOAD)
087E            740            ; Enable the timer and interrupts
087E D2A9       741       setb ET0  ; Enable timer 0 interrupt
0880 D28C       742       setb TR0  ; Start timer 0
0882 22         743            ret
0883            744            
0883            745   
0883            746   
0883            747   Timer0_ISR:
0883            748            ;clr TF0  ; According to the data sheet this is done for us already.
0883 B291       749            cpl SOUND_OUT ; Connect speaker to P1.1!
0885 B2A3       750            cpl SOUND_OUT1
0887 32         751            reti
0888            752   
0888            753   ;---------------------------------;
0888            754   ; Hardware initialization         ;
0888            755   ;---------------------------------;
0888            756   Initialize_All:
0888 12081D     757       lcall InitTimer2
088B 12031E     758       lcall LCD_4BIT ; Initialize LCD
088E D2AF       759       setb EA
0890 22         760            ret
0891            761   
0891            762   ;---------------------------------;
0891            763   ; Main program loop               ;
0891            764   ;---------------------------------;
0891            765   MyProgram:
0891            766       ; Initialize the hardware:
0891 75817F     767       mov SP, #7FH
0894 120888     768       lcall Initialize_All
0897 D280       769       setb P0.0 ; Pin is used as input
0899            770       
0899 754700     771       mov p1Score, #0
089C 754800     772       mov p2Score, #0
089F            773       
089F C0E0       774            push acc
08A1 7401       774            mov a, #1
08A3 14         774            dec a
08A4 120355     774            lcall ?Set_Cursor_1 ; Select column and row
08A7 D0E0       774            pop acc
08A9            775       ;Send_Constant_String(#Initial_Message)
08A9 C083       776            push dph
08AB C082       776            push dpl
08AD C0E0       776            push acc
08AF 900473     776            mov dptr, #Clear_Screen
08B2 120348     776            lcall ?Send_Constant_String
08B5 D0E0       776            pop acc
08B7 D082       776            pop dpl
08B9 D083       776            pop dph
08BB C0E0       777            push acc
08BD 7401       777            mov a, #1
08BF 14         777            dec a
08C0 120353     777            lcall ?Set_Cursor_2 ; Select column and row
08C3 D0E0       777            pop acc
08C5 C083       778            push dph
08C7 C082       778            push dpl
08C9 C0E0       778            push acc
08CB 900473     778            mov dptr, #Clear_Screen
08CE 120348     778            lcall ?Send_Constant_String
08D1 D0E0       778            pop acc
08D3 D082       778            pop dpl
08D5 D083       778            pop dph
08D7            779       
08D7            780       ;lcall Intro_Screen
08D7            781       
08D7 120838     782       lcall Timer0_Init
08DA 12081D     783       lcall InitTimer2
08DD            784       
08DD 85CD43     785       mov Seed+0, TH2
08E0 754401     786       mov Seed+1, #0x01
08E3 754587     787       mov Seed+2, #0x87
08E6 85CC46     788       mov Seed+3, TL2
08E9            789       
08E9            790       ;lcall TomAndJerry
08E9 1210BE     791       lcall Start_Lights
08EC 1210BE     792       lcall Start_Lights
08EF 1214CC     793       lcall Make_Music
08F2 1210BE     794       lcall Start_Lights
08F5            795       ;lcall Make_Music
08F5            796       
08F5 C0E0       797            push acc
08F7 7401       797            mov a, #1
08F9 14         797            dec a
08FA 120355     797            lcall ?Set_Cursor_1 ; Select column and row
08FD D0E0       797            pop acc
08FF            798       ;Send_Constant_String(#Initial_Message)
08FF C083       799            push dph
0901 C082       799            push dpl
0903 C0E0       799            push acc
0905 900473     799            mov dptr, #Clear_Screen
0908 120348     799            lcall ?Send_Constant_String
090B D0E0       799            pop acc
090D D082       799            pop dpl
090F D083       799            pop dph
0911 C0E0       800            push acc
0913 7401       800            mov a, #1
0915 14         800            dec a
0916 120353     800            lcall ?Set_Cursor_2 ; Select column and row
0919 D0E0       800            pop acc
091B C083       801            push dph
091D C082       801            push dpl
091F C0E0       801            push acc
0921 900473     801            mov dptr, #Clear_Screen
0924 120348     801            lcall ?Send_Constant_String
0927 D0E0       801            pop acc
0929 D082       801            pop dpl
092B D083       801            pop dph
092D            802       
092D C0E0       803            push acc
092F 7401       803            mov a, #1
0931 14         803            dec a
0932 120355     803            lcall ?Set_Cursor_1 ; Select column and row
0935 D0E0       803            pop acc
0937 C083       804            push dph
0939 C082       804            push dpl
093B C0E0       804            push acc
093D 900484     804            mov dptr, #One_Player_Message
0940 120348     804            lcall ?Send_Constant_String
0943 D0E0       804            pop acc
0945 D082       804            pop dpl
0947 D083       804            pop dph
0949            805       
0949 C0E0       806            push acc
094B 7401       806            mov a, #1
094D 14         806            dec a
094E 120353     806            lcall ?Set_Cursor_2 ; Select column and row
0951 D0E0       806            pop acc
0953 C083       807            push dph
0955 C082       807            push dpl
0957 C0E0       807            push acc
0959 900495     807            mov dptr, #Two_Player_Message
095C 120348     807            lcall ?Send_Constant_String
095F D0E0       807            pop acc
0961 D082       807            pop dpl
0963 D083       807            pop dph
0965            808         
0965            809         
0965 021895     810       ljmp Select_Screen  
0968 C002       811            push AR2
096A 7AFF       811            mov R2, #255
096C 1202CF     811            lcall ?Wait_Milli_Seconds
096F D002       811            pop AR2
0971            811   
0971 C002       812            push AR2
0973 7AFF       812            mov R2, #255
0975 1202CF     812            lcall ?Wait_Milli_Seconds
0978 D002       812            pop AR2
097A C002       813            push AR2
097C 7AFF       813            mov R2, #255
097E 1202CF     813            lcall ?Wait_Milli_Seconds
0981 D002       813            pop AR2;'
0983 C002       814            push AR2
0985 7AFF       814            mov R2, #255
0987 1202CF     814            lcall ?Wait_Milli_Seconds
098A D002       814            pop AR2
098C            815      
098C            816            
098C            817       
098C            818       ;lcall End_Round
098C            819       
098C            820       ;lcall One_Cycle
098C            821   forever:
098C            822       ; synchronize with rising edge of the signal applied to pin P0.0
098C C2CA       823       clr TR2 ; Stop timer 2
098E 75CC00     824       mov TL2, #0
0991 75CD00     825       mov TH2, #0
0994 754100     826       mov T2ov+0, #0
0997 754200     827       mov T2ov+1, #0
099A C2CF       828       clr TF2
099C D2CA       829       setb TR2
099E            830       
099E 1209AE     831       lcall synch1
09A1 1209B8     832       lcall synch2
09A4 1209D4     833       lcall measure1
09A7 1209DE     834       lcall measure2
09AA 120A09     835       lcall skip_this
09AD 22         836       ret
09AE            837   synch1:
09AE E542       838            mov a, T2ov+1
09B0 54FE       839            anl a, #0xfe
09B2 7036       840            jnz no_signal ; If the count is larger than 0x01ffffffff*45ns=1.16s, we assume there is no signal
09B4 2080F7     841       jb P0.0, synch1
09B7 22         842       ret
09B8            843   synch2:    
09B8 E542       844            mov a, T2ov+1
09BA 54FE       845            anl a, #0xfe
09BC 702C       846            jnz no_signal
09BE 3080F7     847       jnb P0.0, synch2
09C1            848       ; Measure the period of the signal applied to pin P0.0
09C1 C2CA       849       clr TR2
09C3 75CC00     850       mov TL2, #0
09C6 75CD00     851       mov TH2, #0
09C9 754100     852       mov T2ov+0, #0
09CC 754200     853       mov T2ov+1, #0
09CF C2CF       854       clr TF2
09D1 D2CA       855       setb TR2 ; Start timer 2
09D3 22         856       ret
09D4            857   measure1:
09D4 E542       858            mov a, T2ov+1
09D6 54FE       859            anl a, #0xfe
09D8 7010       860            jnz no_signal 
09DA 2080F7     861       jb P0.0, measure1
09DD 22         862       ret
09DE            863   measure2:    
09DE E542       864            mov a, T2ov+1
09E0 54FE       865            anl a, #0xfe
09E2 7006       866            jnz no_signal
09E4 3080F7     867       jnb P0.0, measure2
09E7 C2CA       868       clr TR2 ; Stop timer 2, [T2ov+1, T2ov+0, TH2, TL2] * 45.21123ns is the period
09E9            869   
09E9 22         870            ret
09EA            871   no_signal:       
09EA C0E0       872            push acc
09EC 7401       872            mov a, #1
09EE 14         872            dec a
09EF 120353     872            lcall ?Set_Cursor_2 ; Select column and row
09F2 D0E0       872            pop acc
09F4 C083       873            push dph
09F6 C082       873            push dpl
09F8 C0E0       873            push acc
09FA 900381     873            mov dptr, #Overflow_Str
09FD 120348     873            lcall ?Send_Constant_String
0A00 D0E0       873            pop acc
0A02 D082       873            pop dpl
0A04 D083       873            pop dph
0A06 02098C     874       ljmp forever ; Repeat! 
0A09            875       
0A09            876   skip_this:
0A09            877            ; Make sure [T2ov+1, T2ov+2, TH2, TL2]!=0
0A09 E5CC       878            mov a, TL2
0A0B 45CD       879            orl a, TH2
0A0D 4541       880            orl a, T2ov+0
0A0F 4542       881            orl a, T2ov+1
0A11 60D7       882            jz no_signal
0A13            883            
0A13 121121     884            lcall Calculate_Period
0A16            885   
0A16 22         886       ret
0A17            887   forever2:
0A17            888       ; synchronize with rising edge of the signal applied to pin P0.0
0A17 C2CA       889       clr TR2 ; Stop timer 2
0A19 75CC00     890       mov TL2, #0
0A1C 75CD00     891       mov TH2, #0
0A1F 754100     892       mov T2ov+0, #0
0A22 754200     893       mov T2ov+1, #0
0A25 C2CF       894       clr TF2
0A27 D2CA       895       setb TR2
0A29            896       
0A29 120A39     897       lcall synch1b
0A2C 120A43     898       lcall synch2b
0A2F 120A5F     899       lcall measure1b
0A32 120A68     900       lcall measure2b
0A35 120A78     901       lcall skip_this2
0A38 22         902       ret
0A39            903   synch1b:
0A39 E542       904            mov a, T2ov+1
0A3B 54FE       905            anl a, #0xfe
0A3D 70AB       906            jnz no_signal ; If the count is larger than 0x01ffffffff*45ns=1.16s, we assume there is no signal
0A3F 20A1F7     907       jb P2.1, synch1b
0A42 22         908       ret
0A43            909   synch2b:    
0A43 E542       910            mov a, T2ov+1
0A45 54FE       911            anl a, #0xfe
0A47 702C       912            jnz no_signal_jump
0A49 30A1F7     913       jnb P2.1, synch2b
0A4C            914       ; Measure the period of the signal applied to pin P0.0
0A4C C2CA       915       clr TR2
0A4E 75CC00     916       mov TL2, #0
0A51 75CD00     917       mov TH2, #0
0A54 754100     918       mov T2ov+0, #0
0A57 754200     919       mov T2ov+1, #0
0A5A C2CF       920       clr TF2
0A5C D2CA       921       setb TR2 ; Start timer 2
0A5E 22         922       ret
0A5F            923   measure1b:
0A5F E542       924            mov a, T2ov+1
0A61 54FE       925            anl a, #0xfe
0A63 7010       926            jnz no_signal_jump 
0A65 20A1F7     927       jb P2.1, measure1b
0A68            928   measure2b:    
0A68 E542       929            mov a, T2ov+1
0A6A 54FE       930            anl a, #0xfe
0A6C 7007       931            jnz no_signal_jump
0A6E 30A1F7     932       jnb P2.1, measure2b
0A71 C2CA       933       clr TR2 ; Stop timer 2, [T2ov+1, T2ov+0, TH2, TL2] * 45.21123ns is the period
0A73 8003       934            sjmp skip_this2
0A75            935   
0A75            936   no_signal_jump:  
0A75 0209EA     937            ljmp no_signal
0A78            938       
0A78            939   skip_this2:
0A78            940            ; Make sure [T2ov+1, T2ov+2, TH2, TL2]!=0
0A78 E5CC       941            mov a, TL2
0A7A 45CD       942            orl a, TH2
0A7C 4541       943            orl a, T2ov+0
0A7E 4542       944            orl a, T2ov+1
0A80 60F3       945            jz no_signal_jump
0A82 121121     946            lcall Calculate_Period
0A85 22         947       ret
0A86            948       
0A86            949   Inc_Score:
0A86 12098C     950            lcall forever
0A89            951   
0A89 753400     952            mov y+0, #low (928000 % 0x10000) 
0A8C 753529     952            mov y+1, #high(928000 % 0x10000) 
0A8F 75360E     952            mov y+2, #low (928000 / 0x10000) 
0A92 753700     952            mov y+3, #high(928000 / 0x10000) 
0A95 120152     953            lcall x_gt_y
0A98            954            ;if the capacitance is greater than 200, mf will be set to 1
0A98            955            
0A98 20003D     956            jb mf, Add_Score
0A9B 22         957            ret
0A9C            958   
0A9C            959   Inc_Score_1Player:
0A9C 12098C     960            lcall forever
0A9F            961   
0A9F 753400     962            mov y+0, #low (928000 % 0x10000) 
0AA2 753529     962            mov y+1, #high(928000 % 0x10000) 
0AA5 75360E     962            mov y+2, #low (928000 / 0x10000) 
0AA8 753700     962            mov y+3, #high(928000 / 0x10000) 
0AAB 120152     963            lcall x_gt_y
0AAE            964            
0AAE 200001     965            jb mf, Add_Score_1Player
0AB1 22         966            ret
0AB2            967   
0AB2            968   Add_Score_1Player:
0AB2 C200       969            clr mf
0AB4            970            ;inc p1Score
0AB4 E4         971            clr a
0AB5 C0E0       972            push acc
0AB7 7401       972            mov a, #1
0AB9 14         972            dec a
0ABA 120353     972            lcall ?Set_Cursor_2 ; Select column and row
0ABD D0E0       972            pop acc
0ABF            973            
0ABF E547       974            mov a, p1Score
0AC1 2401       975            add a, #0x01
0AC3 D4         976            da a
0AC4 F547       977            mov p1Score, a
0AC6 C000       978            push ar0
0AC8 A847       978            mov r0, p1Score
0ACA 12035A     978            lcall ?Display_BCD
0ACD D000       978            pop ar0
0ACF 121018     979            lcall Green_light
0AD2 120F29     980            lcall Compare_Score_p1_1Player
0AD5 0212C9     981            ljmp End_Round_1Player
0AD8            982            
0AD8            983   Add_Score:
0AD8 C200       984            clr mf
0ADA            985            ;inc p1Score
0ADA E4         986            clr a
0ADB C0E0       987            push acc
0ADD 7401       987            mov a, #1
0ADF 14         987            dec a
0AE0 120353     987            lcall ?Set_Cursor_2 ; Select column and row
0AE3 D0E0       987            pop acc
0AE5            988            
0AE5 E547       989            mov a, p1Score
0AE7 2401       990            add a, #0x01
0AE9 D4         991            da a
0AEA F547       992            mov p1Score, a
0AEC C000       993            push ar0
0AEE A847       993            mov r0, p1Score
0AF0 12035A     993            lcall ?Display_BCD
0AF3 D000       993            pop ar0
0AF5 121018     994            lcall Green_light
0AF8 120F0A     995            lcall Compare_Score_p1
0AFB 02114C     996            ljmp End_Round
0AFE            997            
0AFE            998   Inc_Score_p2:
0AFE C200       999            clr mf
0B00 120A17    1000            lcall forever2
0B03 753458    1001            mov y+0, #low (935000 % 0x10000) 
0B06 753544    1001            mov y+1, #high(935000 % 0x10000) 
0B09 75360E    1001            mov y+2, #low (935000 / 0x10000) 
0B0C 753700    1001            mov y+3, #high(935000 / 0x10000) 
0B0F 120152    1002            lcall x_gt_y
0B12 200001    1003            jb mf, Add_Score_p2
0B15 22        1004            ret
0B16           1005   
0B16           1006   Add_Score_p2:
0B16 C200      1007            clr mf
0B18 E4        1008            clr a
0B19 C0E0      1009            push acc
0B1B 740F      1009            mov a, #15
0B1D 14        1009            dec a
0B1E 120353    1009            lcall ?Set_Cursor_2 ; Select column and row
0B21 D0E0      1009            pop acc
0B23 E548      1010            mov a, p2Score
0B25 2401      1011            add a, #0x01
0B27 D4        1012            da a
0B28 F548      1013            mov p2Score, a
0B2A C000      1014            push ar0
0B2C A848      1014            mov r0, p2Score
0B2E 12035A    1014            lcall ?Display_BCD
0B31 D000      1014            pop ar0
0B33 121018    1015            lcall Green_Light
0B36 120F83    1016            lcall Compare_Score_p2
0B39 02114C    1017            ljmp End_Round
0B3C           1018   
0B3C           1019   Bridge_Forever:
0B3C 02098C    1020            ljmp forever
0B3F           1021            
0B3F           1022   ; pseudocode:
0B3F           1023   ;        if P1 capacitance > 50 (Can replace this number), increment P1
0B3F           1024   ;   if P2 capacitance > 50 , increment P2
0B3F           1025   ;        lcall compareScores
0B3F           1026   ;        ret
0B3F           1027   
0B3F           1028   Dec_Score:
0B3F C200      1029            clr mf
0B41 12098C    1030            lcall forever
0B44           1031            ;lcall Calculate_Capacitance
0B44           1032            ;mov x+0, capacitance+0
0B44           1033            ;mov x+1, capacitance+1
0B44           1034            ;mov x+2, capacitance+2
0B44           1035            ;mov x+3, capacitance+3
0B44 C0E0      1036            push acc
0B46 7401      1036            mov a, #1
0B48 14        1036            dec a
0B49 120353    1036            lcall ?Set_Cursor_2 ; Select column and row
0B4C D0E0      1036            pop acc
0B4E C000      1037            push ar0
0B50 A847      1037            mov r0, p1Score
0B52 12035A    1037            lcall ?Display_BCD
0B55 D000      1037            pop ar0
0B57 753400    1038            mov y+0, #low (928000 % 0x10000) 
0B5A 753529    1038            mov y+1, #high(928000 % 0x10000) 
0B5D 75360E    1038            mov y+2, #low (928000 / 0x10000) 
0B60 753700    1038            mov y+3, #high(928000 / 0x10000) 
0B63 120152    1039            lcall x_gt_y
0B66           1040            ;if the capacitance is greater than 200, mf will be set to 1
0B66           1041            
0B66 200051    1042            jb mf, Sub_Score
0B69 22        1043            ret
0B6A           1044            
0B6A           1045   Dec_Score_1P:
0B6A C200      1046            clr mf
0B6C 12098C    1047            lcall forever
0B6F C0E0      1048            push acc
0B71 7401      1048            mov a, #1
0B73 14        1048            dec a
0B74 120353    1048            lcall ?Set_Cursor_2 ; Select column and row
0B77 D0E0      1048            pop acc
0B79 C000      1049            push ar0
0B7B A847      1049            mov r0, p1Score
0B7D 12035A    1049            lcall ?Display_BCD
0B80 D000      1049            pop ar0
0B82 753400    1050            mov y+0, #low (928000 % 0x10000) 
0B85 753529    1050            mov y+1, #high(928000 % 0x10000) 
0B88 75360E    1050            mov y+2, #low (928000 / 0x10000) 
0B8B 753700    1050            mov y+3, #high(928000 / 0x10000) 
0B8E 120152    1051            lcall x_gt_y    
0B91 200001    1052            jb mf, Sub_Score_1P
0B94 22        1053            ret
0B95           1054   
0B95           1055   Sub_Score_1P:
0B95 C200      1056            clr mf
0B97           1057            ;dec p1Score
0B97           1058   
0B97           1059            ;load_x(p1Score)
0B97 E547      1060            mov a, p1Score
0B99 2499      1061            add a, #0x99
0B9B D4        1062            da a
0B9C F547      1063            mov p1Score, a
0B9E           1064                    
0B9E C0E0      1065            push acc
0BA0 7401      1065            mov a, #1
0BA2 14        1065            dec a
0BA3 120353    1065            lcall ?Set_Cursor_2 ; Select column and row
0BA6 D0E0      1065            pop acc
0BA8           1066            ;lcall hex2bcd
0BA8 C000      1067            push ar0
0BAA A847      1067            mov r0, p1Score
0BAC 12035A    1067            lcall ?Display_BCD
0BAF D000      1067            pop ar0
0BB1 12086A    1068            lcall Timer0_OFF_Init
0BB4 12106B    1069            lcall Red_Light
0BB7           1070            
0BB7           1071            ;ret
0BB7 0212C9    1072            ljmp End_Round_1Player
0BBA           1073            
0BBA           1074   Sub_Score:
0BBA C200      1075            clr mf
0BBC           1076            ;dec p1Score
0BBC           1077   
0BBC           1078            ;load_x(p1Score)
0BBC E547      1079            mov a, p1Score
0BBE 2499      1080            add a, #0x99
0BC0 D4        1081            da a
0BC1 F547      1082            mov p1Score, a
0BC3           1083                    
0BC3 C0E0      1084            push acc
0BC5 7401      1084            mov a, #1
0BC7 14        1084            dec a
0BC8 120353    1084            lcall ?Set_Cursor_2 ; Select column and row
0BCB D0E0      1084            pop acc
0BCD           1085            ;lcall hex2bcd
0BCD C000      1086            push ar0
0BCF A847      1086            mov r0, p1Score
0BD1 12035A    1086            lcall ?Display_BCD
0BD4 D000      1086            pop ar0
0BD6 12086A    1087            lcall Timer0_OFF_Init
0BD9 12106B    1088            lcall Red_Light
0BDC           1089            
0BDC           1090            ;ret
0BDC 02114C    1091            ljmp End_Round
0BDF           1092   
0BDF           1093   Dec_Score_p2:
0BDF C200      1094            clr mf
0BE1 120A17    1095            lcall forever2
0BE4 C0E0      1096            push acc
0BE6 740F      1096            mov a, #15
0BE8 14        1096            dec a
0BE9 120353    1096            lcall ?Set_Cursor_2 ; Select column and row
0BEC D0E0      1096            pop acc
0BEE C000      1097            push ar0
0BF0 A848      1097            mov r0, p2Score
0BF2 12035A    1097            lcall ?Display_BCD
0BF5 D000      1097            pop ar0
0BF7 753458    1098            mov y+0, #low (935000 % 0x10000) 
0BFA 753544    1098            mov y+1, #high(935000 % 0x10000) 
0BFD 75360E    1098            mov y+2, #low (935000 / 0x10000) 
0C00 753700    1098            mov y+3, #high(935000 / 0x10000) 
0C03 120152    1099            lcall x_gt_y
0C06           1100            ;if the capacitance is greater than 200, mf will be set to 1
0C06           1101            
0C06 200001    1102            jb mf, Sub_Score_p2
0C09 22        1103            ret
0C0A           1104   
0C0A           1105   Sub_Score_p2:
0C0A C200      1106            clr mf
0C0C E548      1107            mov a, p2Score
0C0E 2499      1108            add a, #0x99
0C10 D4        1109            da a
0C11 F548      1110            mov p2Score, a
0C13           1111                    
0C13 C0E0      1112            push acc
0C15 740F      1112            mov a, #15
0C17 14        1112            dec a
0C18 120353    1112            lcall ?Set_Cursor_2 ; Select column and row
0C1B D0E0      1112            pop acc
0C1D C000      1113            push ar0
0C1F A848      1113            mov r0, p2Score
0C21 12035A    1113            lcall ?Display_BCD
0C24 D000      1113            pop ar0
0C26 12106B    1114            lcall Red_Light
0C29 02114C    1115            ljmp End_Round
0C2C           1116   ; pseudocode:
0C2C           1117   ;        if P1 capacitance > 50 (Can replace this number), decrement P1
0C2C           1118   ;   if P2 capacitance > 50 , decrement P2
0C2C           1119   ;        ret    
0C2C           1120   
0C2C           1121   Random: 
0C2C           1122            ; Dont worry about this, it is just some math that is good enough to randomize numbers enough for our purposes
0C2C 854330    1123       mov x+0, Seed+0
0C2F 854431    1124       mov x+1, Seed+1
0C32 854532    1125       mov x+2, Seed+2
0C35 854633    1126       mov x+3, Seed+3
0C38 7534FD    1127            mov y+0, #low (214013 % 0x10000) 
0C3B 753543    1127            mov y+1, #high(214013 % 0x10000) 
0C3E 753603    1127            mov y+2, #low (214013 / 0x10000) 
0C41 753700    1127            mov y+3, #high(214013 / 0x10000) 
0C44 1201A8    1128       lcall mul32
0C47 7534C3    1129            mov y+0, #low (2531011 % 0x10000) 
0C4A 75359E    1129            mov y+1, #high(2531011 % 0x10000) 
0C4D 753626    1129            mov y+2, #low (2531011 / 0x10000) 
0C50 753700    1129            mov y+3, #high(2531011 / 0x10000) 
0C53 1200F3    1130       lcall add32
0C56           1131       
0C56 853043    1132       mov Seed+0, x+0
0C59 853144    1133       mov Seed+1, x+1
0C5C 853245    1134       mov Seed+2, x+2
0C5F 853346    1135       mov Seed+3, x+3
0C62 22        1136       ret
0C63           1137       
0C63           1138   Wait_Random_Time:
0C63 120C2C    1139       lcall Random
0C66 C002      1140            push AR2
0C68 AA43      1140            mov R2, Seed+0
0C6A 1202CF    1140            lcall ?Wait_Milli_Seconds
0C6D D002      1140            pop AR2
0C6F 120B3F    1141            lcall Dec_Score
0C72 120BDF    1142            lcall Dec_Score_p2
0C75 C002      1143            push AR2
0C77 AA44      1143            mov R2, Seed+1
0C79 1202CF    1143            lcall ?Wait_Milli_Seconds
0C7C D002      1143            pop AR2
0C7E           1144       ;Inc_Score ... so on in between each random wait time
0C7E 120B3F    1145       lcall Dec_Score
0C81 120BDF    1146            lcall Dec_Score_p2
0C84 C002      1147            push AR2
0C86 AA45      1147            mov R2, Seed+2
0C88 1202CF    1147            lcall ?Wait_Milli_Seconds
0C8B D002      1147            pop AR2
0C8D 120B3F    1148       lcall Dec_Score
0C90 120BDF    1149            lcall Dec_Score_p2
0C93 C002      1150            push AR2
0C95 AA46      1150            mov R2, Seed+3
0C97 1202CF    1150            lcall ?Wait_Milli_Seconds
0C9A D002      1150            pop AR2
0C9C 120B3F    1151       lcall Dec_Score
0C9F 120BDF    1152            lcall Dec_Score_p2
0CA2           1153            
0CA2 C002      1154            push AR2
0CA4 AA43      1154            mov R2, Seed+0
0CA6 1202CF    1154            lcall ?Wait_Milli_Seconds
0CA9 D002      1154            pop AR2
0CAB 120B3F    1155            lcall Dec_Score
0CAE 120BDF    1156            lcall Dec_Score_p2
0CB1 C002      1157            push AR2
0CB3 AA44      1157            mov R2, Seed+1
0CB5 1202CF    1157            lcall ?Wait_Milli_Seconds
0CB8 D002      1157            pop AR2
0CBA           1158       ;Inc_Score ... so on in between each random wait time
0CBA 120B3F    1159       lcall Dec_Score
0CBD 120BDF    1160            lcall Dec_Score_p2
0CC0 C002      1161            push AR2
0CC2 AA45      1161            mov R2, Seed+2
0CC4 1202CF    1161            lcall ?Wait_Milli_Seconds
0CC7 D002      1161            pop AR2
0CC9 120B3F    1162       lcall Dec_Score
0CCC 120BDF    1163            lcall Dec_Score_p2
0CCF C002      1164            push AR2
0CD1 AA46      1164            mov R2, Seed+3
0CD3 1202CF    1164            lcall ?Wait_Milli_Seconds
0CD6 D002      1164            pop AR2
0CD8 120B3F    1165       lcall Dec_Score
0CDB 120BDF    1166            lcall Dec_Score_p2
0CDE           1167            
0CDE C002      1168            push AR2
0CE0 AA43      1168            mov R2, Seed+0
0CE2 1202CF    1168            lcall ?Wait_Milli_Seconds
0CE5 D002      1168            pop AR2
0CE7 120B3F    1169            lcall Dec_Score
0CEA 120BDF    1170            lcall Dec_Score_p2
0CED C002      1171            push AR2
0CEF AA44      1171            mov R2, Seed+1
0CF1 1202CF    1171            lcall ?Wait_Milli_Seconds
0CF4 D002      1171            pop AR2
0CF6           1172       ;Inc_Score ... so on in between each random wait time
0CF6 120B3F    1173       lcall Dec_Score
0CF9 120BDF    1174            lcall Dec_Score_p2
0CFC C002      1175            push AR2
0CFE AA45      1175            mov R2, Seed+2
0D00 1202CF    1175            lcall ?Wait_Milli_Seconds
0D03 D002      1175            pop AR2
0D05 120B3F    1176       lcall Dec_Score
0D08 120BDF    1177            lcall Dec_Score_p2
0D0B C002      1178            push AR2
0D0D AA46      1178            mov R2, Seed+3
0D0F 1202CF    1178            lcall ?Wait_Milli_Seconds
0D12 D002      1178            pop AR2
0D14 120B3F    1179       lcall Dec_Score
0D17 120BDF    1180            lcall Dec_Score_p2
0D1A           1181            
0D1A C002      1182            push AR2
0D1C AA43      1182            mov R2, Seed+0
0D1E 1202CF    1182            lcall ?Wait_Milli_Seconds
0D21 D002      1182            pop AR2
0D23 120B3F    1183            lcall Dec_Score
0D26 120BDF    1184            lcall Dec_Score_p2
0D29 C002      1185            push AR2
0D2B AA44      1185            mov R2, Seed+1
0D2D 1202CF    1185            lcall ?Wait_Milli_Seconds
0D30 D002      1185            pop AR2
0D32           1186       ;Inc_Score ... so on in between each random wait time
0D32 120B3F    1187       lcall Dec_Score
0D35 120BDF    1188            lcall Dec_Score_p2
0D38 C002      1189            push AR2
0D3A AA45      1189            mov R2, Seed+2
0D3C 1202CF    1189            lcall ?Wait_Milli_Seconds
0D3F D002      1189            pop AR2
0D41 120B3F    1190       lcall Dec_Score
0D44 120BDF    1191            lcall Dec_Score_p2
0D47 C002      1192            push AR2
0D49 AA46      1192            mov R2, Seed+3
0D4B 1202CF    1192            lcall ?Wait_Milli_Seconds
0D4E D002      1192            pop AR2
0D50 120B3F    1193       lcall Dec_Score
0D53 120BDF    1194            lcall Dec_Score_p2
0D56           1195       
0D56 22        1196       ret    
0D57           1197      
0D57           1198   Wait_Random_Time_P1:
0D57 120C2C    1199       lcall Random
0D5A C002      1200            push AR2
0D5C AA43      1200            mov R2, Seed+0
0D5E 1202CF    1200            lcall ?Wait_Milli_Seconds
0D61 D002      1200            pop AR2
0D63 120B6A    1201            lcall Dec_Score_1P
0D66 C002      1202            push AR2
0D68 AA44      1202            mov R2, Seed+1
0D6A 1202CF    1202            lcall ?Wait_Milli_Seconds
0D6D D002      1202            pop AR2
0D6F 120B6A    1203       lcall Dec_Score_1P
0D72 C002      1204            push AR2
0D74 AA45      1204            mov R2, Seed+2
0D76 1202CF    1204            lcall ?Wait_Milli_Seconds
0D79 D002      1204            pop AR2
0D7B 120B6A    1205       lcall Dec_Score_1P
0D7E C002      1206            push AR2
0D80 AA46      1206            mov R2, Seed+3
0D82 1202CF    1206            lcall ?Wait_Milli_Seconds
0D85 D002      1206            pop AR2
0D87 120B6A    1207       lcall Dec_Score_1P
0D8A C002      1208            push AR2
0D8C AA43      1208            mov R2, Seed+0
0D8E 1202CF    1208            lcall ?Wait_Milli_Seconds
0D91 D002      1208            pop AR2
0D93 120B6A    1209            lcall Dec_Score_1P
0D96 C002      1210            push AR2
0D98 AA44      1210            mov R2, Seed+1
0D9A 1202CF    1210            lcall ?Wait_Milli_Seconds
0D9D D002      1210            pop AR2
0D9F 120B6A    1211       lcall Dec_Score_1P
0DA2 C002      1212            push AR2
0DA4 AA45      1212            mov R2, Seed+2
0DA6 1202CF    1212            lcall ?Wait_Milli_Seconds
0DA9 D002      1212            pop AR2
0DAB 120B6A    1213       lcall Dec_Score_1P
0DAE C002      1214            push AR2
0DB0 AA46      1214            mov R2, Seed+3
0DB2 1202CF    1214            lcall ?Wait_Milli_Seconds
0DB5 D002      1214            pop AR2
0DB7 120B6A    1215       lcall Dec_Score_1P
0DBA C002      1216            push AR2
0DBC AA43      1216            mov R2, Seed+0
0DBE 1202CF    1216            lcall ?Wait_Milli_Seconds
0DC1 D002      1216            pop AR2
0DC3 120B6A    1217            lcall Dec_Score_1P
0DC6 C002      1218            push AR2
0DC8 AA44      1218            mov R2, Seed+1
0DCA 1202CF    1218            lcall ?Wait_Milli_Seconds
0DCD D002      1218            pop AR2
0DCF 120B6A    1219       lcall Dec_Score_1P
0DD2 C002      1220            push AR2
0DD4 AA45      1220            mov R2, Seed+2
0DD6 1202CF    1220            lcall ?Wait_Milli_Seconds
0DD9 D002      1220            pop AR2
0DDB 120B6A    1221       lcall Dec_Score_1P
0DDE C002      1222            push AR2
0DE0 AA46      1222            mov R2, Seed+3
0DE2 1202CF    1222            lcall ?Wait_Milli_Seconds
0DE5 D002      1222            pop AR2
0DE7 120B6A    1223       lcall Dec_Score_1P
0DEA C002      1224            push AR2
0DEC AA43      1224            mov R2, Seed+0
0DEE 1202CF    1224            lcall ?Wait_Milli_Seconds
0DF1 D002      1224            pop AR2
0DF3 120B6A    1225            lcall Dec_Score_1P
0DF6 C002      1226            push AR2
0DF8 AA44      1226            mov R2, Seed+1
0DFA 1202CF    1226            lcall ?Wait_Milli_Seconds
0DFD D002      1226            pop AR2
0DFF 120B6A    1227       lcall Dec_Score_1P
0E02 C002      1228            push AR2
0E04 AA45      1228            mov R2, Seed+2
0E06 1202CF    1228            lcall ?Wait_Milli_Seconds
0E09 D002      1228            pop AR2
0E0B 120B6A    1229       lcall Dec_Score_1P
0E0E C002      1230            push AR2
0E10 AA46      1230            mov R2, Seed+3
0E12 1202CF    1230            lcall ?Wait_Milli_Seconds
0E15 D002      1230            pop AR2
0E17 120B6A    1231       lcall Dec_Score_1P
0E1A 22        1232       ret 
0E1B           1233       
0E1B           1234   Wait_Constant_Time:
0E1B C002      1235            push AR2
0E1D 7AFF      1235            mov R2, #255
0E1F 1202CF    1235            lcall ?Wait_Milli_Seconds
0E22 D002      1235            pop AR2
0E24 120A86    1236            lcall Inc_Score
0E27 120AFE    1237            lcall Inc_Score_p2
0E2A C002      1238            push AR2
0E2C 7AFF      1238            mov R2, #255
0E2E 1202CF    1238            lcall ?Wait_Milli_Seconds
0E31 D002      1238            pop AR2
0E33 120A86    1239       lcall Inc_Score
0E36 120AFE    1240            lcall Inc_Score_p2
0E39 C002      1241            push AR2
0E3B 7AFF      1241            mov R2, #255
0E3D 1202CF    1241            lcall ?Wait_Milli_Seconds
0E40 D002      1241            pop AR2
0E42 120A86    1242       lcall Inc_Score
0E45 120AFE    1243            lcall Inc_Score_p2
0E48 C002      1244            push AR2
0E4A 7AFF      1244            mov R2, #255
0E4C 1202CF    1244            lcall ?Wait_Milli_Seconds
0E4F D002      1244            pop AR2
0E51 120A86    1245       lcall Inc_Score
0E54 120AFE    1246            lcall Inc_Score_p2
0E57 C002      1247            push AR2
0E59 7AFF      1247            mov R2, #255
0E5B 1202CF    1247            lcall ?Wait_Milli_Seconds
0E5E D002      1247            pop AR2
0E60 120A86    1248       lcall Inc_Score
0E63 120AFE    1249            lcall Inc_Score_p2
0E66 C002      1250            push AR2
0E68 7AFF      1250            mov R2, #255
0E6A 1202CF    1250            lcall ?Wait_Milli_Seconds
0E6D D002      1250            pop AR2
0E6F 120A86    1251       lcall Inc_Score
0E72 120AFE    1252            lcall Inc_Score_p2
0E75 C002      1253            push AR2
0E77 7AFF      1253            mov R2, #255
0E79 1202CF    1253            lcall ?Wait_Milli_Seconds
0E7C D002      1253            pop AR2
0E7E 120A86    1254       lcall Inc_Score
0E81 120AFE    1255            lcall Inc_Score_p2
0E84 C002      1256            push AR2
0E86 7AFF      1256            mov R2, #255
0E88 1202CF    1256            lcall ?Wait_Milli_Seconds
0E8B D002      1256            pop AR2
0E8D 22        1257       ret
0E8E           1258       
0E8E           1259   Wait_Constant_Time_P1:
0E8E C002      1260            push AR2
0E90 7AFF      1260            mov R2, #255
0E92 1202CF    1260            lcall ?Wait_Milli_Seconds
0E95 D002      1260            pop AR2
0E97 120A9C    1261            lcall Inc_Score_1Player
0E9A C002      1262            push AR2
0E9C 7AFF      1262            mov R2, #255
0E9E 1202CF    1262            lcall ?Wait_Milli_Seconds
0EA1 D002      1262            pop AR2
0EA3 120A9C    1263       lcall Inc_Score_1Player
0EA6 C002      1264            push AR2
0EA8 7AFF      1264            mov R2, #255
0EAA 1202CF    1264            lcall ?Wait_Milli_Seconds
0EAD D002      1264            pop AR2
0EAF 120A9C    1265       lcall Inc_Score_1Player
0EB2 C002      1266            push AR2
0EB4 7AFF      1266            mov R2, #255
0EB6 1202CF    1266            lcall ?Wait_Milli_Seconds
0EB9 D002      1266            pop AR2
0EBB 120A9C    1267       lcall Inc_Score_1Player
0EBE C002      1268            push AR2
0EC0 7AFF      1268            mov R2, #255
0EC2 1202CF    1268            lcall ?Wait_Milli_Seconds
0EC5 D002      1268            pop AR2
0EC7 120A9C    1269       lcall Inc_Score_1Player
0ECA C002      1270            push AR2
0ECC 7AFF      1270            mov R2, #255
0ECE 1202CF    1270            lcall ?Wait_Milli_Seconds
0ED1 D002      1270            pop AR2
0ED3 120A9C    1271       lcall Inc_Score_1Player
0ED6 C002      1272            push AR2
0ED8 7AFF      1272            mov R2, #255
0EDA 1202CF    1272            lcall ?Wait_Milli_Seconds
0EDD D002      1272            pop AR2
0EDF 120A9C    1273       lcall Inc_Score_1Player
0EE2 C002      1274            push AR2
0EE4 7AFF      1274            mov R2, #255
0EE6 1202CF    1274            lcall ?Wait_Milli_Seconds
0EE9 D002      1274            pop AR2
0EEB 22        1275       ret
0EEC           1276       
0EEC           1277   One_Cycle:
0EEC 12098C    1278            lcall forever
0EEF 120838    1279            lcall Timer0_Init
0EF2 120C63    1280            lcall Wait_Random_Time ; in here, we are continuously checking if someone slaps, if they do, we decrement
0EF5 12098C    1281            lcall forever
0EF8 120851    1282       lcall Timer0_HIGH_Init
0EFB 12098C    1283       lcall forever
0EFE           1284       ;Wait for slap, if slapped, increment score
0EFE 120E1B    1285       lcall Wait_Constant_Time ; in here, we are continuously checking if someone slaps, if they do we increment
0F01 12098C    1286       lcall forever
0F04 120838    1287       lcall Timer0_Init
0F07           1288       ;Wait for slap, if slapped, decrement score
0F07 020EEC    1289       ljmp One_Cycle
0F0A           1290       
0F0A           1291   Compare_Score_p1:
0F0A           1292   ;   if p1Score == 5 , ljmp P1_Wins
0F0A 854730    1293            mov x+0, p1Score
0F0D 753100    1294            mov x+1, #0
0F10 753200    1295            mov x+2, #0
0F13 753300    1296            mov x+3, #0
0F16 753405    1297            mov y+0, #low (5 % 0x10000) 
0F19 753500    1297            mov y+1, #high(5 % 0x10000) 
0F1C 753600    1297            mov y+2, #low (5 / 0x10000) 
0F1F 753700    1297            mov y+3, #high(5 / 0x10000) 
0F22 12016E    1298            lcall x_eq_y
0F25 20007A    1299            jb mf, P1_Wins
0F28 22        1300            ret
0F29           1301   
0F29           1302   Compare_Score_p1_1Player:
0F29           1303   ;   if p1Score == 5 , ljmp P1_Wins
0F29 854730    1304            mov x+0, p1Score
0F2C 753100    1305            mov x+1, #0
0F2F 753200    1306            mov x+2, #0
0F32 753300    1307            mov x+3, #0
0F35 753405    1308            mov y+0, #low (5 % 0x10000) 
0F38 753500    1308            mov y+1, #high(5 % 0x10000) 
0F3B 753600    1308            mov y+2, #low (5 / 0x10000) 
0F3E 753700    1308            mov y+3, #high(5 / 0x10000) 
0F41 12016E    1309            lcall x_eq_y
0F44 200001    1310            jb mf, You_Win
0F47 22        1311            ret
0F48           1312   
0F48           1313   You_Win:
0F48           1314   ; Display some sort of message
0F48 C0E0      1315            push acc
0F4A 7401      1315            mov a, #1
0F4C 14        1315            dec a
0F4D 120355    1315            lcall ?Set_Cursor_1 ; Select column and row
0F50 D0E0      1315            pop acc
0F52 C083      1316            push dph
0F54 C082      1316            push dpl
0F56 C0E0      1316            push acc
0F58 9003DA    1316            mov dptr, #You_Win1
0F5B 120348    1316            lcall ?Send_Constant_String
0F5E D0E0      1316            pop acc
0F60 D082      1316            pop dpl
0F62 D083      1316            pop dph
0F64 C0E0      1317            push acc
0F66 7401      1317            mov a, #1
0F68 14        1317            dec a
0F69 120353    1317            lcall ?Set_Cursor_2 ; Select column and row
0F6C D0E0      1317            pop acc
0F6E C083      1318            push dph
0F70 C082      1318            push dpl
0F72 C0E0      1318            push acc
0F74 9003EB    1318            mov dptr, #You_Win2
0F77 120348    1318            lcall ?Send_Constant_String
0F7A D0E0      1318            pop acc
0F7C D082      1318            pop dpl
0F7E D083      1318            pop dph
0F80 121446    1319            lcall Game_Over
0F83           1320            
0F83           1321   Compare_Score_p2:
0F83           1322   ;        if p2Score == 5 , ljmp P2_Wins
0F83 854830    1323            mov x+0, p2Score
0F86 753100    1324            mov x+1, #0
0F89 753200    1325            mov x+2, #0
0F8C 753300    1326            mov x+3, #0
0F8F 753405    1327            mov y+0, #low (5 % 0x10000) 
0F92 753500    1327            mov y+1, #high(5 % 0x10000) 
0F95 753600    1327            mov y+2, #low (5 / 0x10000) 
0F98 753700    1327            mov y+3, #high(5 / 0x10000) 
0F9B 12016E    1328            lcall x_eq_y
0F9E 20003C    1329            jb mf, P2_Wins
0FA1 22        1330            ret
0FA2           1331            
0FA2           1332   Check_0_p1:
0FA2           1333            
0FA2           1334   
0FA2           1335   Check_0_p2:
0FA2           1336            
0FA2           1337   
0FA2           1338   P1_Wins:
0FA2           1339   ; Display some sort of message
0FA2 C0E0      1340            push acc
0FA4 7401      1340            mov a, #1
0FA6 14        1340            dec a
0FA7 120355    1340            lcall ?Set_Cursor_1 ; Select column and row
0FAA D0E0      1340            pop acc
0FAC C083      1341            push dph
0FAE C082      1341            push dpl
0FB0 C0E0      1341            push acc
0FB2 9003A7    1341            mov dptr, #Player_Win1
0FB5 120348    1341            lcall ?Send_Constant_String
0FB8 D0E0      1341            pop acc
0FBA D082      1341            pop dpl
0FBC D083      1341            pop dph
0FBE C0E0      1342            push acc
0FC0 7401      1342            mov a, #1
0FC2 14        1342            dec a
0FC3 120353    1342            lcall ?Set_Cursor_2 ; Select column and row
0FC6 D0E0      1342            pop acc
0FC8           1342   
0FC8 C083      1343            push dph
0FCA C082      1343            push dpl
0FCC C0E0      1343            push acc
0FCE 9003B8    1343            mov dptr, #Player_One_Win2
0FD1 120348    1343            lcall ?Send_Constant_String
0FD4 D0E0      1343            pop acc
0FD6 D082      1343            pop dpl
0FD8 D083      1343            pop dph
0FDA 121446    1344            lcall Game_Over
0FDD           1345            ;possibly leave in this state til reset
0FDD           1346            
0FDD           1347   P2_Wins:
0FDD           1348   ; display some sort of message
0FDD C0E0      1349            push acc
0FDF 7401      1349            mov a, #1
0FE1 14        1349            dec a
0FE2 120355    1349            lcall ?Set_Cursor_1 ; Select column and row
0FE5 D0E0      1349            pop acc
0FE7 C083      1350            push dph
0FE9 C082      1350            push dpl
0FEB C0E0      1350            push acc
0FED 9003A7    1350            mov dptr, #Player_Win1
0FF0 120348    1350            lcall ?Send_Constant_String
0FF3 D0E0      1350            pop acc
0FF5 D082      1350            pop dpl
0FF7 D083      1350            pop dph
0FF9 C0E0      1351            push acc
0FFB 7401      1351            mov a, #1
0FFD 14        1351            dec a
0FFE 120353    1351            lcall ?Set_Cursor_2 ; Select column and row
1001 D0E0      1351            pop acc
1003           1351   
1003 C083      1352            push dph
1005 C082      1352            push dpl
1007 C0E0      1352            push acc
1009 9003C9    1352            mov dptr, #Player_Two_Win2
100C 120348    1352            lcall ?Send_Constant_String
100F D0E0      1352            pop acc
1011 D082      1352            pop dpl
1013 D083      1352            pop dph
1015           1353            ;possibly leave in this state til reset
1015 121446    1354            lcall Game_Over
1018           1355            
1018           1356   Start_Screen:
1018           1357   
1018           1358   Green_Light:
1018 12086A    1359            lcall Timer0_OFF_Init
101B B2A5      1360            cpl P2.5
101D C002      1361            push AR2
101F 7AFF      1361            mov R2, #255
1021 1202CF    1361            lcall ?Wait_Milli_Seconds
1024 D002      1361            pop AR2
1026 B2A7      1362            cpl P2.7
1028 C002      1363            push AR2
102A 7AFF      1363            mov R2, #255
102C 1202CF    1363            lcall ?Wait_Milli_Seconds
102F D002      1363            pop AR2
1031 B287      1364            cpl P0.7
1033 C002      1365            push AR2
1035 7AFF      1365            mov R2, #255
1037 1202CF    1365            lcall ?Wait_Milli_Seconds
103A D002      1365            pop AR2
103C B285      1366            cpl P0.5
103E C002      1367            push AR2
1040 7AFF      1367            mov R2, #255
1042 1202CF    1367            lcall ?Wait_Milli_Seconds
1045 D002      1367            pop AR2
1047 B2A5      1368            cpl P2.5
1049 C002      1369            push AR2
104B 7AFF      1369            mov R2, #255
104D 1202CF    1369            lcall ?Wait_Milli_Seconds
1050 D002      1369            pop AR2
1052 B2A7      1370            cpl P2.7
1054 C002      1371            push AR2
1056 7AFF      1371            mov R2, #255
1058 1202CF    1371            lcall ?Wait_Milli_Seconds
105B D002      1371            pop AR2
105D B287      1372            cpl P0.7
105F C002      1373            push AR2
1061 7AFF      1373            mov R2, #255
1063 1202CF    1373            lcall ?Wait_Milli_Seconds
1066 D002      1373            pop AR2
1068 B285      1374            cpl P0.5
106A 22        1375            ret
106B           1376            
106B           1377   Red_Light:
106B 12086A    1378            lcall Timer0_OFF_Init
106E B281      1379            cpl P0.1
1070 C002      1380            push AR2
1072 7AFF      1380            mov R2, #255
1074 1202CF    1380            lcall ?Wait_Milli_Seconds
1077 D002      1380            pop AR2
1079 B282      1381            cpl P0.2
107B C002      1382            push AR2
107D 7AFF      1382            mov R2, #255
107F 1202CF    1382            lcall ?Wait_Milli_Seconds
1082 D002      1382            pop AR2
1084 B283      1383            cpl P0.3
1086 C002      1384            push AR2
1088 7AFF      1384            mov R2, #255
108A 1202CF    1384            lcall ?Wait_Milli_Seconds
108D D002      1384            pop AR2
108F B284      1385            cpl P0.4
1091 C002      1386            push AR2
1093 7AFF      1386            mov R2, #255
1095 1202CF    1386            lcall ?Wait_Milli_Seconds
1098 D002      1386            pop AR2
109A B281      1387            cpl P0.1
109C C002      1388            push AR2
109E 7AFF      1388            mov R2, #255
10A0 1202CF    1388            lcall ?Wait_Milli_Seconds
10A3 D002      1388            pop AR2
10A5 B282      1389            cpl P0.2
10A7 C002      1390            push AR2
10A9 7AFF      1390            mov R2, #255
10AB 1202CF    1390            lcall ?Wait_Milli_Seconds
10AE D002      1390            pop AR2
10B0 B283      1391            cpl P0.3
10B2 C002      1392            push AR2
10B4 7AFF      1392            mov R2, #255
10B6 1202CF    1392            lcall ?Wait_Milli_Seconds
10B9 D002      1392            pop AR2
10BB B284      1393            cpl P0.4
10BD 22        1394            ret
10BE           1395            
10BE           1396   Start_Lights:
10BE 12086A    1397            lcall Timer0_OFF_Init
10C1 B2A5      1398            cpl P2.5
10C3 B281      1399            cpl P0.1
10C5 C002      1400            push AR2
10C7 7AFF      1400            mov R2, #255
10C9 1202CF    1400            lcall ?Wait_Milli_Seconds
10CC D002      1400            pop AR2
10CE B2A7      1401            cpl P2.7
10D0 B282      1402            cpl P0.2
10D2 C002      1403            push AR2
10D4 7AFF      1403            mov R2, #255
10D6 1202CF    1403            lcall ?Wait_Milli_Seconds
10D9 D002      1403            pop AR2
10DB B287      1404            cpl P0.7
10DD B283      1405            cpl P0.3
10DF C002      1406            push AR2
10E1 7AFF      1406            mov R2, #255
10E3 1202CF    1406            lcall ?Wait_Milli_Seconds
10E6 D002      1406            pop AR2
10E8 B285      1407            cpl P0.5
10EA B284      1408            cpl P0.4
10EC C002      1409            push AR2
10EE 7AFF      1409            mov R2, #255
10F0 1202CF    1409            lcall ?Wait_Milli_Seconds
10F3 D002      1409            pop AR2
10F5 B2A5      1410            cpl P2.5
10F7 B281      1411            cpl P0.1
10F9 C002      1412            push AR2
10FB 7AFF      1412            mov R2, #255
10FD 1202CF    1412            lcall ?Wait_Milli_Seconds
1100 D002      1412            pop AR2
1102 B2A7      1413            cpl P2.7
1104 B282      1414            cpl P0.2
1106 C002      1415            push AR2
1108 7AFF      1415            mov R2, #255
110A 1202CF    1415            lcall ?Wait_Milli_Seconds
110D D002      1415            pop AR2
110F B287      1416            cpl P0.7
1111 B283      1417            cpl P0.3
1113 C002      1418            push AR2
1115 7AFF      1418            mov R2, #255
1117 1202CF    1418            lcall ?Wait_Milli_Seconds
111A D002      1418            pop AR2
111C B285      1419            cpl P0.5
111E B284      1420            cpl P0.4
1120 22        1421            ret
1121           1422            
1121           1423   Calculate_Period:
1121 85CC30    1424            mov x+0, TL2
1124 85CD31    1425            mov x+1, TH2
1127 854132    1426            mov x+2, T2ov+0
112A 854233    1427            mov x+3, T2ov+1
112D           1428            
112D 75342D    1429            mov y+0, #low (45 % 0x10000) 
1130 753500    1429            mov y+1, #high(45 % 0x10000) 
1133 753600    1429            mov y+2, #low (45 / 0x10000) 
1136 753700    1429            mov y+3, #high(45 / 0x10000)  ; One clock pulse is 1/22.1184MHz=45.21123ns
1139 1201A8    1430            lcall mul32
113C 75340A    1431            mov y+0, #low (10 % 0x10000) 
113F 753500    1431            mov y+1, #high(10 % 0x10000) 
1142 753600    1431            mov y+2, #low (10 / 0x10000) 
1145 753700    1431            mov y+3, #high(10 / 0x10000)  ;mult by 1.44 by mult 144/100
1148 1201A8    1432            lcall mul32
114B 22        1433            ret
114C           1434            
114C           1435            
114C           1436   End_Round:
114C 12086A    1437            lcall Timer0_OFF_Init
114F           1438   ;        Wait_Milli_Seconds(#255)
114F           1439      ; Wait_Milli_Seconds(#255)
114F           1440       ;Wait_Milli_Seconds(#255)
114F           1441       ;Wait_Milli_Seconds(#255)
114F           1442       ;Wait_Milli_Seconds(#255)
114F C002      1443            push AR2
1151 7AFF      1443            mov R2, #255
1153 1202CF    1443            lcall ?Wait_Milli_Seconds
1156 D002      1443            pop AR2
1158 C002      1444            push AR2
115A 7AFF      1444            mov R2, #255
115C 1202CF    1444            lcall ?Wait_Milli_Seconds
115F D002      1444            pop AR2
1161 C002      1445            push AR2
1163 7AFF      1445            mov R2, #255
1165 1202CF    1445            lcall ?Wait_Milli_Seconds
1168 D002      1445            pop AR2
116A C0E0      1446            push acc
116C 7401      1446            mov a, #1
116E 14        1446            dec a
116F 120355    1446            lcall ?Set_Cursor_1 ; Select column and row
1172 D0E0      1446            pop acc
1174 C083      1447            push dph
1176 C082      1447            push dpl
1178 C0E0      1447            push acc
117A 9003FC    1447            mov dptr, #Ready_Str
117D 120348    1447            lcall ?Send_Constant_String
1180 D0E0      1447            pop acc
1182 D082      1447            pop dpl
1184 D083      1447            pop dph
1186 C002      1448            push AR2
1188 7AFF      1448            mov R2, #255
118A 1202CF    1448            lcall ?Wait_Milli_Seconds
118D D002      1448            pop AR2
118F C002      1449            push AR2
1191 7AFF      1449            mov R2, #255
1193 1202CF    1449            lcall ?Wait_Milli_Seconds
1196 D002      1449            pop AR2
1198 C002      1450            push AR2
119A 7AFF      1450            mov R2, #255
119C 1202CF    1450            lcall ?Wait_Milli_Seconds
119F D002      1450            pop AR2
11A1 C002      1451            push AR2
11A3 7AFF      1451            mov R2, #255
11A5 1202CF    1451            lcall ?Wait_Milli_Seconds
11A8 D002      1451            pop AR2
11AA C0E0      1452            push acc
11AC 7401      1452            mov a, #1
11AE 14        1452            dec a
11AF 120355    1452            lcall ?Set_Cursor_1 ; Select column and row
11B2 D0E0      1452            pop acc
11B4 C083      1453            push dph
11B6 C082      1453            push dpl
11B8 C0E0      1453            push acc
11BA 90040D    1453            mov dptr, #Ready_3
11BD 120348    1453            lcall ?Send_Constant_String
11C0 D0E0      1453            pop acc
11C2 D082      1453            pop dpl
11C4 D083      1453            pop dph
11C6           1454       
11C6 C002      1455            push AR2
11C8 7AFF      1455            mov R2, #255
11CA 1202CF    1455            lcall ?Wait_Milli_Seconds
11CD D002      1455            pop AR2
11CF C002      1456            push AR2
11D1 7AFF      1456            mov R2, #255
11D3 1202CF    1456            lcall ?Wait_Milli_Seconds
11D6 D002      1456            pop AR2
11D8 C002      1457            push AR2
11DA 7AFF      1457            mov R2, #255
11DC 1202CF    1457            lcall ?Wait_Milli_Seconds
11DF D002      1457            pop AR2
11E1 C002      1458            push AR2
11E3 7AFF      1458            mov R2, #255
11E5 1202CF    1458            lcall ?Wait_Milli_Seconds
11E8 D002      1458            pop AR2
11EA C0E0      1459            push acc
11EC 7401      1459            mov a, #1
11EE 14        1459            dec a
11EF 120355    1459            lcall ?Set_Cursor_1 ; Select column and row
11F2 D0E0      1459            pop acc
11F4 C083      1460            push dph
11F6 C082      1460            push dpl
11F8 C0E0      1460            push acc
11FA 90041E    1460            mov dptr, #Ready_2
11FD 120348    1460            lcall ?Send_Constant_String
1200 D0E0      1460            pop acc
1202 D082      1460            pop dpl
1204 D083      1460            pop dph
1206           1461       
1206 C002      1462            push AR2
1208 7AFF      1462            mov R2, #255
120A 1202CF    1462            lcall ?Wait_Milli_Seconds
120D D002      1462            pop AR2
120F C002      1463            push AR2
1211 7AFF      1463            mov R2, #255
1213 1202CF    1463            lcall ?Wait_Milli_Seconds
1216 D002      1463            pop AR2
1218 C002      1464            push AR2
121A 7AFF      1464            mov R2, #255
121C 1202CF    1464            lcall ?Wait_Milli_Seconds
121F D002      1464            pop AR2
1221 C002      1465            push AR2
1223 7AFF      1465            mov R2, #255
1225 1202CF    1465            lcall ?Wait_Milli_Seconds
1228 D002      1465            pop AR2
122A C0E0      1466            push acc
122C 7401      1466            mov a, #1
122E 14        1466            dec a
122F 120355    1466            lcall ?Set_Cursor_1 ; Select column and row
1232 D0E0      1466            pop acc
1234 C083      1467            push dph
1236 C082      1467            push dpl
1238 C0E0      1467            push acc
123A 90042F    1467            mov dptr, #Ready_1
123D 120348    1467            lcall ?Send_Constant_String
1240 D0E0      1467            pop acc
1242 D082      1467            pop dpl
1244 D083      1467            pop dph
1246           1468       
1246 C002      1469            push AR2
1248 7AFF      1469            mov R2, #255
124A 1202CF    1469            lcall ?Wait_Milli_Seconds
124D D002      1469            pop AR2
124F C002      1470            push AR2
1251 7AFF      1470            mov R2, #255
1253 1202CF    1470            lcall ?Wait_Milli_Seconds
1256 D002      1470            pop AR2
1258 C002      1471            push AR2
125A 7AFF      1471            mov R2, #255
125C 1202CF    1471            lcall ?Wait_Milli_Seconds
125F D002      1471            pop AR2
1261 C002      1472            push AR2
1263 7AFF      1472            mov R2, #255
1265 1202CF    1472            lcall ?Wait_Milli_Seconds
1268 D002      1472            pop AR2
126A C0E0      1473            push acc
126C 7401      1473            mov a, #1
126E 14        1473            dec a
126F 120355    1473            lcall ?Set_Cursor_1 ; Select column and row
1272 D0E0      1473            pop acc
1274 C083      1474            push dph
1276 C082      1474            push dpl
1278 C0E0      1474            push acc
127A 900440    1474            mov dptr, #Go
127D 120348    1474            lcall ?Send_Constant_String
1280 D0E0      1474            pop acc
1282 D082      1474            pop dpl
1284 D083      1474            pop dph
1286           1475       
1286 C002      1476            push AR2
1288 7AFF      1476            mov R2, #255
128A 1202CF    1476            lcall ?Wait_Milli_Seconds
128D D002      1476            pop AR2
128F C002      1477            push AR2
1291 7AFF      1477            mov R2, #255
1293 1202CF    1477            lcall ?Wait_Milli_Seconds
1296 D002      1477            pop AR2
1298 C002      1478            push AR2
129A 7AFF      1478            mov R2, #255
129C 1202CF    1478            lcall ?Wait_Milli_Seconds
129F D002      1478            pop AR2
12A1 C002      1479            push AR2
12A3 7AFF      1479            mov R2, #255
12A5 1202CF    1479            lcall ?Wait_Milli_Seconds
12A8 D002      1479            pop AR2
12AA C0E0      1480            push acc
12AC 7401      1480            mov a, #1
12AE 14        1480            dec a
12AF 120355    1480            lcall ?Set_Cursor_1 ; Select column and row
12B2 D0E0      1480            pop acc
12B4 C083      1481            push dph
12B6 C082      1481            push dpl
12B8 C0E0      1481            push acc
12BA 900370    1481            mov dptr, #Initial_Message
12BD 120348    1481            lcall ?Send_Constant_String
12C0 D0E0      1481            pop acc
12C2 D082      1481            pop dpl
12C4 D083      1481            pop dph
12C6 020EEC    1482       ljmp One_Cycle
12C9           1483   
12C9           1484   End_Round_1Player:
12C9 12086A    1485            lcall Timer0_OFF_Init
12CC           1486   ;        Wait_Milli_Seconds(#255)
12CC           1487      ; Wait_Milli_Seconds(#255)
12CC           1488       ;Wait_Milli_Seconds(#255)
12CC           1489       ;Wait_Milli_Seconds(#255)
12CC           1490       ;Wait_Milli_Seconds(#255)
12CC C002      1491            push AR2
12CE 7AFF      1491            mov R2, #255
12D0 1202CF    1491            lcall ?Wait_Milli_Seconds
12D3 D002      1491            pop AR2
12D5 C002      1492            push AR2
12D7 7AFF      1492            mov R2, #255
12D9 1202CF    1492            lcall ?Wait_Milli_Seconds
12DC D002      1492            pop AR2
12DE C002      1493            push AR2
12E0 7AFF      1493            mov R2, #255
12E2 1202CF    1493            lcall ?Wait_Milli_Seconds
12E5 D002      1493            pop AR2
12E7 C0E0      1494            push acc
12E9 7401      1494            mov a, #1
12EB 14        1494            dec a
12EC 120355    1494            lcall ?Set_Cursor_1 ; Select column and row
12EF D0E0      1494            pop acc
12F1 C083      1495            push dph
12F3 C082      1495            push dpl
12F5 C0E0      1495            push acc
12F7 9003FC    1495            mov dptr, #Ready_Str
12FA 120348    1495            lcall ?Send_Constant_String
12FD D0E0      1495            pop acc
12FF D082      1495            pop dpl
1301 D083      1495            pop dph
1303 C002      1496            push AR2
1305 7AFF      1496            mov R2, #255
1307 1202CF    1496            lcall ?Wait_Milli_Seconds
130A D002      1496            pop AR2
130C C002      1497            push AR2
130E 7AFF      1497            mov R2, #255
1310 1202CF    1497            lcall ?Wait_Milli_Seconds
1313 D002      1497            pop AR2
1315 C002      1498            push AR2
1317 7AFF      1498            mov R2, #255
1319 1202CF    1498            lcall ?Wait_Milli_Seconds
131C D002      1498            pop AR2
131E C002      1499            push AR2
1320 7AFF      1499            mov R2, #255
1322 1202CF    1499            lcall ?Wait_Milli_Seconds
1325 D002      1499            pop AR2
1327 C0E0      1500            push acc
1329 7401      1500            mov a, #1
132B 14        1500            dec a
132C 120355    1500            lcall ?Set_Cursor_1 ; Select column and row
132F D0E0      1500            pop acc
1331 C083      1501            push dph
1333 C082      1501            push dpl
1335 C0E0      1501            push acc
1337 90040D    1501            mov dptr, #Ready_3
133A 120348    1501            lcall ?Send_Constant_String
133D D0E0      1501            pop acc
133F D082      1501            pop dpl
1341 D083      1501            pop dph
1343           1502       
1343 C002      1503            push AR2
1345 7AFF      1503            mov R2, #255
1347 1202CF    1503            lcall ?Wait_Milli_Seconds
134A D002      1503            pop AR2
134C C002      1504            push AR2
134E 7AFF      1504            mov R2, #255
1350 1202CF    1504            lcall ?Wait_Milli_Seconds
1353 D002      1504            pop AR2
1355 C002      1505            push AR2
1357 7AFF      1505            mov R2, #255
1359 1202CF    1505            lcall ?Wait_Milli_Seconds
135C D002      1505            pop AR2
135E C002      1506            push AR2
1360 7AFF      1506            mov R2, #255
1362 1202CF    1506            lcall ?Wait_Milli_Seconds
1365 D002      1506            pop AR2
1367 C0E0      1507            push acc
1369 7401      1507            mov a, #1
136B 14        1507            dec a
136C 120355    1507            lcall ?Set_Cursor_1 ; Select column and row
136F D0E0      1507            pop acc
1371 C083      1508            push dph
1373 C082      1508            push dpl
1375 C0E0      1508            push acc
1377 90041E    1508            mov dptr, #Ready_2
137A 120348    1508            lcall ?Send_Constant_String
137D D0E0      1508            pop acc
137F D082      1508            pop dpl
1381 D083      1508            pop dph
1383           1509       
1383 C002      1510            push AR2
1385 7AFF      1510            mov R2, #255
1387 1202CF    1510            lcall ?Wait_Milli_Seconds
138A D002      1510            pop AR2
138C C002      1511            push AR2
138E 7AFF      1511            mov R2, #255
1390 1202CF    1511            lcall ?Wait_Milli_Seconds
1393 D002      1511            pop AR2
1395 C002      1512            push AR2
1397 7AFF      1512            mov R2, #255
1399 1202CF    1512            lcall ?Wait_Milli_Seconds
139C D002      1512            pop AR2
139E C002      1513            push AR2
13A0 7AFF      1513            mov R2, #255
13A2 1202CF    1513            lcall ?Wait_Milli_Seconds
13A5 D002      1513            pop AR2
13A7 C0E0      1514            push acc
13A9 7401      1514            mov a, #1
13AB 14        1514            dec a
13AC 120355    1514            lcall ?Set_Cursor_1 ; Select column and row
13AF D0E0      1514            pop acc
13B1 C083      1515            push dph
13B3 C082      1515            push dpl
13B5 C0E0      1515            push acc
13B7 90042F    1515            mov dptr, #Ready_1
13BA 120348    1515            lcall ?Send_Constant_String
13BD D0E0      1515            pop acc
13BF D082      1515            pop dpl
13C1 D083      1515            pop dph
13C3           1516       
13C3 C002      1517            push AR2
13C5 7AFF      1517            mov R2, #255
13C7 1202CF    1517            lcall ?Wait_Milli_Seconds
13CA D002      1517            pop AR2
13CC C002      1518            push AR2
13CE 7AFF      1518            mov R2, #255
13D0 1202CF    1518            lcall ?Wait_Milli_Seconds
13D3 D002      1518            pop AR2
13D5 C002      1519            push AR2
13D7 7AFF      1519            mov R2, #255
13D9 1202CF    1519            lcall ?Wait_Milli_Seconds
13DC D002      1519            pop AR2
13DE C002      1520            push AR2
13E0 7AFF      1520            mov R2, #255
13E2 1202CF    1520            lcall ?Wait_Milli_Seconds
13E5 D002      1520            pop AR2
13E7 C0E0      1521            push acc
13E9 7401      1521            mov a, #1
13EB 14        1521            dec a
13EC 120355    1521            lcall ?Set_Cursor_1 ; Select column and row
13EF D0E0      1521            pop acc
13F1 C083      1522            push dph
13F3 C082      1522            push dpl
13F5 C0E0      1522            push acc
13F7 900440    1522            mov dptr, #Go
13FA 120348    1522            lcall ?Send_Constant_String
13FD D0E0      1522            pop acc
13FF D082      1522            pop dpl
1401 D083      1522            pop dph
1403           1523       
1403 C002      1524            push AR2
1405 7AFF      1524            mov R2, #255
1407 1202CF    1524            lcall ?Wait_Milli_Seconds
140A D002      1524            pop AR2
140C C002      1525            push AR2
140E 7AFF      1525            mov R2, #255
1410 1202CF    1525            lcall ?Wait_Milli_Seconds
1413 D002      1525            pop AR2
1415 C002      1526            push AR2
1417 7AFF      1526            mov R2, #255
1419 1202CF    1526            lcall ?Wait_Milli_Seconds
141C D002      1526            pop AR2
141E C002      1527            push AR2
1420 7AFF      1527            mov R2, #255
1422 1202CF    1527            lcall ?Wait_Milli_Seconds
1425 D002      1527            pop AR2
1427 C0E0      1528            push acc
1429 7401      1528            mov a, #1
142B 14        1528            dec a
142C 120355    1528            lcall ?Set_Cursor_1 ; Select column and row
142F D0E0      1528            pop acc
1431 C083      1529            push dph
1433 C082      1529            push dpl
1435 C0E0      1529            push acc
1437 9004A6    1529            mov dptr, #Initial_Message_P1
143A 120348    1529            lcall ?Send_Constant_String
143D D0E0      1529            pop acc
143F D082      1529            pop dpl
1441 D083      1529            pop dph
1443 021955    1530       ljmp P1_Cycle
1446           1531       
1446           1532   Game_Over:
1446 121973    1533            lcall TomAndJerry
1449           1534            
1449 C002      1535            push AR2
144B 7AFF      1535            mov R2, #255
144D 1202CF    1535            lcall ?Wait_Milli_Seconds
1450 D002      1535            pop AR2
1452           1535   
1452 C002      1536            push AR2
1454 7AFF      1536            mov R2, #255
1456 1202CF    1536            lcall ?Wait_Milli_Seconds
1459 D002      1536            pop AR2
145B C002      1537            push AR2
145D 7AFF      1537            mov R2, #255
145F 1202CF    1537            lcall ?Wait_Milli_Seconds
1462 D002      1537            pop AR2
1464 C002      1538            push AR2
1466 7AFF      1538            mov R2, #255
1468 1202CF    1538            lcall ?Wait_Milli_Seconds
146B D002      1538            pop AR2
146D C002      1539            push AR2
146F 7AFF      1539            mov R2, #255
1471 1202CF    1539            lcall ?Wait_Milli_Seconds
1474 D002      1539            pop AR2
1476 C002      1540            push AR2
1478 7AFF      1540            mov R2, #255
147A 1202CF    1540            lcall ?Wait_Milli_Seconds
147D D002      1540            pop AR2
147F C002      1541            push AR2
1481 7AFF      1541            mov R2, #255
1483 1202CF    1541            lcall ?Wait_Milli_Seconds
1486 D002      1541            pop AR2
1488 C002      1542            push AR2
148A 7AFF      1542            mov R2, #255
148C 1202CF    1542            lcall ?Wait_Milli_Seconds
148F D002      1542            pop AR2
1491           1543       
1491 C0E0      1544            push acc
1493 7401      1544            mov a, #1
1495 14        1544            dec a
1496 120355    1544            lcall ?Set_Cursor_1 ; Select column and row
1499 D0E0      1544            pop acc
149B C083      1545            push dph
149D C082      1545            push dpl
149F C0E0      1545            push acc
14A1 900451    1545            mov dptr, #Play_Again
14A4 120348    1545            lcall ?Send_Constant_String
14A7 D0E0      1545            pop acc
14A9 D082      1545            pop dpl
14AB D083      1545            pop dph
14AD C0E0      1546            push acc
14AF 7401      1546            mov a, #1
14B1 14        1546            dec a
14B2 120353    1546            lcall ?Set_Cursor_2 ; Select column and row
14B5 D0E0      1546            pop acc
14B7 C083      1547            push dph
14B9 C082      1547            push dpl
14BB C0E0      1547            push acc
14BD 900462    1547            mov dptr, #Hit_Reset
14C0 120348    1547            lcall ?Send_Constant_String
14C3 D0E0      1547            pop acc
14C5 D082      1547            pop dpl
14C7 D083      1547            pop dph         
14C9 021446    1548            ljmp Game_Over
14CC           1549            
14CC           1550   Make_Music:
14CC C0E0      1551            push acc
14CE 7401      1551            mov a, #1
14D0 14        1551            dec a
14D1 120355    1551            lcall ?Set_Cursor_1 ; Select column and row
14D4 D0E0      1551            pop acc
14D6 C083      1552            push dph
14D8 C082      1552            push dpl
14DA C0E0      1552            push acc
14DC 9004B7    1552            mov dptr, #L_W
14DF 120348    1552            lcall ?Send_Constant_String
14E2 D0E0      1552            pop acc
14E4 D082      1552            pop dpl
14E6 D083      1552            pop dph
14E8 1207D2    1553            lcall Timer0_Rate_E_Init
14EB C002      1554            push AR2
14ED 7AFF      1554            mov R2, #255
14EF 1202CF    1554            lcall ?Wait_Milli_Seconds
14F2 D002      1554            pop AR2
14F4 C0E0      1555            push acc
14F6 7402      1555            mov a, #2
14F8 14        1555            dec a
14F9 120355    1555            lcall ?Set_Cursor_1 ; Select column and row
14FC D0E0      1555            pop acc
14FE C083      1556            push dph
1500 C082      1556            push dpl
1502 C0E0      1556            push acc
1504 9004B9    1556            mov dptr, #L_E
1507 120348    1556            lcall ?Send_Constant_String
150A D0E0      1556            pop acc
150C D082      1556            pop dpl
150E D083      1556            pop dph
1510 C002      1557            push AR2
1512 7AFF      1557            mov R2, #255
1514 1202CF    1557            lcall ?Wait_Milli_Seconds
1517 D002      1557            pop AR2
1519 C0E0      1558            push acc
151B 7403      1558            mov a, #3
151D 14        1558            dec a
151E 120355    1558            lcall ?Set_Cursor_1 ; Select column and row
1521 D0E0      1558            pop acc
1523 C083      1559            push dph
1525 C082      1559            push dpl
1527 C0E0      1559            push acc
1529 9004BB    1559            mov dptr, #L_L
152C 120348    1559            lcall ?Send_Constant_String
152F D0E0      1559            pop acc
1531 D082      1559            pop dpl
1533 D083      1559            pop dph
1535 12086A    1560            lcall Timer0_OFF_Init
1538 C002      1561            push AR2
153A 7AFF      1561            mov R2, #255
153C 1202CF    1561            lcall ?Wait_Milli_Seconds
153F D002      1561            pop AR2
1541 C0E0      1562            push acc
1543 7404      1562            mov a, #4
1545 14        1562            dec a
1546 120355    1562            lcall ?Set_Cursor_1 ; Select column and row
1549 D0E0      1562            pop acc
154B C083      1563            push dph
154D C082      1563            push dpl
154F C0E0      1563            push acc
1551 9004BD    1563            mov dptr, #L_C
1554 120348    1563            lcall ?Send_Constant_String
1557 D0E0      1563            pop acc
1559 D082      1563            pop dpl
155B D083      1563            pop dph
155D C002      1564            push AR2
155F 7AFF      1564            mov R2, #255
1561 1202CF    1564            lcall ?Wait_Milli_Seconds
1564 D002      1564            pop AR2
1566 C0E0      1565            push acc
1568 7405      1565            mov a, #5
156A 14        1565            dec a
156B 120355    1565            lcall ?Set_Cursor_1 ; Select column and row
156E D0E0      1565            pop acc
1570 C083      1566            push dph
1572 C082      1566            push dpl
1574 C0E0      1566            push acc
1576 9004BF    1566            mov dptr, #L_O
1579 120348    1566            lcall ?Send_Constant_String
157C D0E0      1566            pop acc
157E D082      1566            pop dpl
1580 D083      1566            pop dph
1582 1207A0    1567            lcall Timer0_Rate_D_Init
1585 12086A    1568            lcall Timer0_OFF_Init
1588           1569            
1588 1207A0    1570            lcall Timer0_Rate_D_Init
158B C002      1571            push AR2
158D 7A96      1571            mov R2, #150
158F 1202CF    1571            lcall ?Wait_Milli_Seconds
1592 D002      1571            pop AR2
1594 12086A    1572            lcall Timer0_OFF_Init
1597 C002      1573            push AR2
1599 7A14      1573            mov R2, #20
159B 1202CF    1573            lcall ?Wait_Milli_Seconds
159E D002      1573            pop AR2
15A0 C0E0      1574            push acc
15A2 7406      1574            mov a, #6
15A4 14        1574            dec a
15A5 120355    1574            lcall ?Set_Cursor_1 ; Select column and row
15A8 D0E0      1574            pop acc
15AA C083      1575            push dph
15AC C082      1575            push dpl
15AE C0E0      1575            push acc
15B0 9004C1    1575            mov dptr, #L_M
15B3 120348    1575            lcall ?Send_Constant_String
15B6 D0E0      1575            pop acc
15B8 D082      1575            pop dpl
15BA D083      1575            pop dph
15BC           1576            
15BC 1207A0    1577            lcall Timer0_Rate_D_Init
15BF C002      1578            push AR2
15C1 7A96      1578            mov R2, #150
15C3 1202CF    1578            lcall ?Wait_Milli_Seconds
15C6 D002      1578            pop AR2
15C8 12086A    1579            lcall Timer0_OFF_Init
15CB C002      1580            push AR2
15CD 7A14      1580            mov R2, #20
15CF 1202CF    1580            lcall ?Wait_Milli_Seconds
15D2 D002      1580            pop AR2
15D4 C0E0      1581            push acc
15D6 7407      1581            mov a, #7
15D8 14        1581            dec a
15D9 120355    1581            lcall ?Set_Cursor_1 ; Select column and row
15DC D0E0      1581            pop acc
15DE C083      1582            push dph
15E0 C082      1582            push dpl
15E2 C0E0      1582            push acc
15E4 9004B9    1582            mov dptr, #L_E
15E7 120348    1582            lcall ?Send_Constant_String
15EA D0E0      1582            pop acc
15EC D082      1582            pop dpl
15EE D083      1582            pop dph
15F0           1583            
15F0           1584            
15F0 1207A0    1585            lcall Timer0_Rate_D_Init
15F3 C002      1586            push AR2
15F5 7A96      1586            mov R2, #150
15F7 1202CF    1586            lcall ?Wait_Milli_Seconds
15FA D002      1586            pop AR2
15FC 12086A    1587            lcall Timer0_OFF_Init
15FF C002      1588            push AR2
1601 7A14      1588            mov R2, #20
1603 1202CF    1588            lcall ?Wait_Milli_Seconds
1606 D002      1588            pop AR2
1608 C0E0      1589            push acc
160A 7409      1589            mov a, #9
160C 14        1589            dec a
160D 120355    1589            lcall ?Set_Cursor_1 ; Select column and row
1610 D0E0      1589            pop acc
1612 C083      1590            push dph
1614 C082      1590            push dpl
1616 C0E0      1590            push acc
1618 9004C3    1590            mov dptr, #L_T
161B 120348    1590            lcall ?Send_Constant_String
161E D0E0      1590            pop acc
1620 D082      1590            pop dpl
1622 D083      1590            pop dph
1624           1591            
1624 C002      1592            push AR2
1626 7AFF      1592            mov R2, #255
1628 1202CF    1592            lcall ?Wait_Milli_Seconds
162B D002      1592            pop AR2
162D C0E0      1593            push acc
162F 740A      1593            mov a, #10
1631 14        1593            dec a
1632 120355    1593            lcall ?Set_Cursor_1 ; Select column and row
1635 D0E0      1593            pop acc
1637 C083      1594            push dph
1639 C082      1594            push dpl
163B C0E0      1594            push acc
163D 9004BF    1594            mov dptr, #L_O
1640 120348    1594            lcall ?Send_Constant_String
1643 D0E0      1594            pop acc
1645 D082      1594            pop dpl
1647 D083      1594            pop dph
1649 C002      1595            push AR2
164B 7AFF      1595            mov R2, #255
164D 1202CF    1595            lcall ?Wait_Milli_Seconds
1650 D002      1595            pop AR2
1652 C0E0      1596            push acc
1654 7401      1596            mov a, #1
1656 14        1596            dec a
1657 120353    1596            lcall ?Set_Cursor_2 ; Select column and row
165A D0E0      1596            pop acc
165C C083      1597            push dph
165E C082      1597            push dpl
1660 C0E0      1597            push acc
1662 9004C5    1597            mov dptr, #L_S
1665 120348    1597            lcall ?Send_Constant_String
1668 D0E0      1597            pop acc
166A D082      1597            pop dpl
166C D083      1597            pop dph
166E C002      1598            push AR2
1670 7AFF      1598            mov R2, #255
1672 1202CF    1598            lcall ?Wait_Milli_Seconds
1675 D002      1598            pop AR2
1677 C0E0      1599            push acc
1679 7402      1599            mov a, #2
167B 14        1599            dec a
167C 120353    1599            lcall ?Set_Cursor_2 ; Select column and row
167F D0E0      1599            pop acc
1681 C083      1600            push dph
1683 C082      1600            push dpl
1685 C0E0      1600            push acc
1687 9004BB    1600            mov dptr, #L_L
168A 120348    1600            lcall ?Send_Constant_String
168D D0E0      1600            pop acc
168F D082      1600            pop dpl
1691 D083      1600            pop dph
1693           1601            
1693 1207EB    1602            lcall Timer0_Rate_A_Init
1696 C002      1603            push AR2
1698 7A96      1603            mov R2, #150
169A 1202CF    1603            lcall ?Wait_Milli_Seconds
169D D002      1603            pop AR2
169F C0E0      1604            push acc
16A1 7403      1604            mov a, #3
16A3 14        1604            dec a
16A4 120353    1604            lcall ?Set_Cursor_2 ; Select column and row
16A7 D0E0      1604            pop acc
16A9 C083      1605            push dph
16AB C082      1605            push dpl
16AD C0E0      1605            push acc
16AF 9004C7    1605            mov dptr, #L_A
16B2 120348    1605            lcall ?Send_Constant_String
16B5 D0E0      1605            pop acc
16B7 D082      1605            pop dpl
16B9 D083      1605            pop dph
16BB 12086A    1606            lcall Timer0_OFF_Init
16BE C002      1607            push AR2
16C0 7A14      1607            mov R2, #20
16C2 1202CF    1607            lcall ?Wait_Milli_Seconds
16C5 D002      1607            pop AR2
16C7           1608            
16C7 1207EB    1609            lcall Timer0_Rate_A_Init
16CA C002      1610            push AR2
16CC 7A96      1610            mov R2, #150
16CE 1202CF    1610            lcall ?Wait_Milli_Seconds
16D1 D002      1610            pop AR2
16D3 C0E0      1611            push acc
16D5 7404      1611            mov a, #4
16D7 14        1611            dec a
16D8 120353    1611            lcall ?Set_Cursor_2 ; Select column and row
16DB D0E0      1611            pop acc
16DD C083      1612            push dph
16DF C082      1612            push dpl
16E1 C0E0      1612            push acc
16E3 9004C9    1612            mov dptr, #L_P
16E6 120348    1612            lcall ?Send_Constant_String
16E9 D0E0      1612            pop acc
16EB D082      1612            pop dpl
16ED D083      1612            pop dph
16EF 12086A    1613            lcall Timer0_OFF_Init
16F2 C002      1614            push AR2
16F4 7A14      1614            mov R2, #20
16F6 1202CF    1614            lcall ?Wait_Milli_Seconds
16F9 D002      1614            pop AR2
16FB           1615            
16FB 1207EB    1616            lcall Timer0_Rate_A_Init
16FE C002      1617            push AR2
1700 7A96      1617            mov R2, #150
1702 1202CF    1617            lcall ?Wait_Milli_Seconds
1705 D002      1617            pop AR2
1707 C0E0      1618            push acc
1709 7405      1618            mov a, #5
170B 14        1618            dec a
170C 120353    1618            lcall ?Set_Cursor_2 ; Select column and row
170F D0E0      1618            pop acc
1711 C083      1619            push dph
1713 C082      1619            push dpl
1715 C0E0      1619            push acc
1717 9004CD    1619            mov dptr, #L_Dash
171A 120348    1619            lcall ?Send_Constant_String
171D D0E0      1619            pop acc
171F D082      1619            pop dpl
1721 D083      1619            pop dph
1723 12086A    1620            lcall Timer0_OFF_Init
1726 C002      1621            push AR2
1728 7A14      1621            mov R2, #20
172A 1202CF    1621            lcall ?Wait_Milli_Seconds
172D D002      1621            pop AR2
172F           1622            
172F C002      1623            push AR2
1731 7AFF      1623            mov R2, #255
1733 1202CF    1623            lcall ?Wait_Milli_Seconds
1736 D002      1623            pop AR2
1738 C0E0      1624            push acc
173A 7406      1624            mov a, #6
173C 14        1624            dec a
173D 120353    1624            lcall ?Set_Cursor_2 ; Select column and row
1740 D0E0      1624            pop acc
1742 C083      1625            push dph
1744 C082      1625            push dpl
1746 C0E0      1625            push acc
1748 9004C7    1625            mov dptr, #L_A
174B 120348    1625            lcall ?Send_Constant_String
174E D0E0      1625            pop acc
1750 D082      1625            pop dpl
1752 D083      1625            pop dph
1754 C002      1626            push AR2
1756 7AFF      1626            mov R2, #255
1758 1202CF    1626            lcall ?Wait_Milli_Seconds
175B D002      1626            pop AR2
175D C0E0      1627            push acc
175F 7407      1627            mov a, #7
1761 14        1627            dec a
1762 120353    1627            lcall ?Set_Cursor_2 ; Select column and row
1765 D0E0      1627            pop acc
1767 C083      1628            push dph
1769 C082      1628            push dpl
176B C0E0      1628            push acc
176D 9004CD    1628            mov dptr, #L_Dash
1770 120348    1628            lcall ?Send_Constant_String
1773 D0E0      1628            pop acc
1775 D082      1628            pop dpl
1777 D083      1628            pop dph
1779 C002      1629            push AR2
177B 7AFF      1629            mov R2, #255
177D 1202CF    1629            lcall ?Wait_Milli_Seconds
1780 D002      1629            pop AR2
1782 C0E0      1630            push acc
1784 7408      1630            mov a, #8
1786 14        1630            dec a
1787 120353    1630            lcall ?Set_Cursor_2 ; Select column and row
178A D0E0      1630            pop acc
178C C083      1631            push dph
178E C082      1631            push dpl
1790 C0E0      1631            push acc
1792 9004CB    1631            mov dptr, #L_D
1795 120348    1631            lcall ?Send_Constant_String
1798 D0E0      1631            pop acc
179A D082      1631            pop dpl
179C D083      1631            pop dph
179E           1632            
179E C002      1633            push AR2
17A0 7AFF      1633            mov R2, #255
17A2 1202CF    1633            lcall ?Wait_Milli_Seconds
17A5 D002      1633            pop AR2
17A7 C0E0      1634            push acc
17A9 7409      1634            mov a, #9
17AB 14        1634            dec a
17AC 120353    1634            lcall ?Set_Cursor_2 ; Select column and row
17AF D0E0      1634            pop acc
17B1 C083      1635            push dph
17B3 C082      1635            push dpl
17B5 C0E0      1635            push acc
17B7 9004BF    1635            mov dptr, #L_O
17BA 120348    1635            lcall ?Send_Constant_String
17BD D0E0      1635            pop acc
17BF D082      1635            pop dpl
17C1 D083      1635            pop dph
17C3 C002      1636            push AR2
17C5 7AFF      1636            mov R2, #255
17C7 1202CF    1636            lcall ?Wait_Milli_Seconds
17CA D002      1636            pop AR2
17CC C0E0      1637            push acc
17CE 740A      1637            mov a, #10
17D0 14        1637            dec a
17D1 120353    1637            lcall ?Set_Cursor_2 ; Select column and row
17D4 D0E0      1637            pop acc
17D6 C083      1638            push dph
17D8 C082      1638            push dpl
17DA C0E0      1638            push acc
17DC 9004BF    1638            mov dptr, #L_O
17DF 120348    1638            lcall ?Send_Constant_String
17E2 D0E0      1638            pop acc
17E4 D082      1638            pop dpl
17E6 D083      1638            pop dph
17E8 C002      1639            push AR2
17EA 7AFF      1639            mov R2, #255
17EC 1202CF    1639            lcall ?Wait_Milli_Seconds
17EF D002      1639            pop AR2
17F1           1640            
17F1 120804    1641            lcall Timer0_Rate_GH_Init
17F4 C002      1642            push AR2
17F6 7A82      1642            mov R2, #130
17F8 1202CF    1642            lcall ?Wait_Milli_Seconds
17FB D002      1642            pop AR2
17FD           1643            
17FD 1207D2    1644            lcall Timer0_Rate_E_Init
1800 C002      1645            push AR2
1802 7A82      1645            mov R2, #130
1804 1202CF    1645            lcall ?Wait_Milli_Seconds
1807 D002      1645            pop AR2
1809           1646            
1809 1207A0    1647            lcall Timer0_Rate_D_Init
180C C002      1648            push AR2
180E 7A82      1648            mov R2, #130
1810 1202CF    1648            lcall ?Wait_Milli_Seconds
1813 D002      1648            pop AR2
1815           1649            
1815 120787    1650            lcall Timer0_Rate_B_Init
1818 C002      1651            push AR2
181A 7A82      1651            mov R2, #130
181C 1202CF    1651            lcall ?Wait_Milli_Seconds
181F D002      1651            pop AR2
1821           1652            
1821 1207EB    1653            lcall Timer0_Rate_A_Init
1824 C002      1654            push AR2
1826 7A82      1654            mov R2, #130
1828 1202CF    1654            lcall ?Wait_Milli_Seconds
182B D002      1654            pop AR2
182D           1655            
182D 120787    1656            lcall Timer0_Rate_B_Init
1830 C002      1657            push AR2
1832 7A50      1657            mov R2, #80
1834 1202CF    1657            lcall ?Wait_Milli_Seconds
1837 D002      1657            pop AR2
1839           1658            
1839 1207EB    1659            lcall Timer0_Rate_A_Init
183C C002      1660            push AR2
183E 7A82      1660            mov R2, #130
1840 1202CF    1660            lcall ?Wait_Milli_Seconds
1843 D002      1660            pop AR2
1845           1661            
1845 1207B9    1662            lcall Timer0_Rate_GL_Init
1848 C002      1663            push AR2
184A 7A82      1663            mov R2, #130
184C 1202CF    1663            lcall ?Wait_Milli_Seconds
184F D002      1663            pop AR2
1851           1664            
1851 12086A    1665            lcall Timer0_OFF_Init
1854 C002      1666            push AR2
1856 7AFF      1666            mov R2, #255
1858 1202CF    1666            lcall ?Wait_Milli_Seconds
185B D002      1666            pop AR2
185D           1667            
185D           1668            
185D 22        1669            ret
185E           1670            
185E           1671   Intro_Screen:
185E C083      1672            push dph
1860 C082      1672            push dpl
1862 C0E0      1672            push acc
1864 900473    1672            mov dptr, #Clear_Screen
1867 120348    1672            lcall ?Send_Constant_String
186A D0E0      1672            pop acc
186C D082      1672            pop dpl
186E D083      1672            pop dph
1870 C0E0      1673            push acc
1872 7401      1673            mov a, #1
1874 14        1673            dec a
1875 120355    1673            lcall ?Set_Cursor_1 ; Select column and row
1878 D0E0      1673            pop acc
187A C083      1674            push dph
187C C082      1674            push dpl
187E C0E0      1674            push acc
1880 9004B7    1674            mov dptr, #L_W
1883 120348    1674            lcall ?Send_Constant_String
1886 D0E0      1674            pop acc
1888 D082      1674            pop dpl
188A D083      1674            pop dph
188C C002      1675            push AR2
188E 7AFF      1675            mov R2, #255
1890 1202CF    1675            lcall ?Wait_Milli_Seconds
1893 D002      1675            pop AR2
1895           1676            
1895           1677            
1895           1678   Select_Screen:
1895 C002      1679            push AR2
1897 7A96      1679            mov R2, #150
1899 1202CF    1679            lcall ?Wait_Milli_Seconds
189C D002      1679            pop AR2
189E 30A006    1680            jnb P2.0, Bridge_One_Cycle
18A1 30A25A    1681            jnb P2.2, Bridge_P1_Cycle
18A4 021895    1682            ljmp Select_Screen
18A7           1683            
18A7           1684   Bridge_One_Cycle:
18A7 C0E0      1685            push acc
18A9 7401      1685            mov a, #1
18AB 14        1685            dec a
18AC 120355    1685            lcall ?Set_Cursor_1 ; Select column and row
18AF D0E0      1685            pop acc
18B1 C083      1686            push dph
18B3 C082      1686            push dpl
18B5 C0E0      1686            push acc
18B7 900473    1686            mov dptr, #Clear_Screen
18BA 120348    1686            lcall ?Send_Constant_String
18BD D0E0      1686            pop acc
18BF D082      1686            pop dpl
18C1 D083      1686            pop dph
18C3 C0E0      1687            push acc
18C5 7401      1687            mov a, #1
18C7 14        1687            dec a
18C8 120353    1687            lcall ?Set_Cursor_2 ; Select column and row
18CB D0E0      1687            pop acc
18CD C083      1688            push dph
18CF C082      1688            push dpl
18D1 C0E0      1688            push acc
18D3 900473    1688            mov dptr, #Clear_Screen
18D6 120348    1688            lcall ?Send_Constant_String
18D9 D0E0      1688            pop acc
18DB D082      1688            pop dpl
18DD D083      1688            pop dph
18DF C0E0      1689            push acc
18E1 7401      1689            mov a, #1
18E3 14        1689            dec a
18E4 120355    1689            lcall ?Set_Cursor_1 ; Select column and row
18E7 D0E0      1689            pop acc
18E9 C083      1690            push dph
18EB C082      1690            push dpl
18ED C0E0      1690            push acc
18EF 900370    1690            mov dptr, #Initial_Message
18F2 120348    1690            lcall ?Send_Constant_String
18F5 D0E0      1690            pop acc
18F7 D082      1690            pop dpl
18F9 D083      1690            pop dph
18FB 020EEC    1691            ljmp One_Cycle
18FE           1692            
18FE           1693   Bridge_P1_Cycle:
18FE C0E0      1694            push acc
1900 7401      1694            mov a, #1
1902 14        1694            dec a
1903 120355    1694            lcall ?Set_Cursor_1 ; Select column and row
1906 D0E0      1694            pop acc
1908 C083      1695            push dph
190A C082      1695            push dpl
190C C0E0      1695            push acc
190E 900473    1695            mov dptr, #Clear_Screen
1911 120348    1695            lcall ?Send_Constant_String
1914 D0E0      1695            pop acc
1916 D082      1695            pop dpl
1918 D083      1695            pop dph
191A C0E0      1696            push acc
191C 7401      1696            mov a, #1
191E 14        1696            dec a
191F 120353    1696            lcall ?Set_Cursor_2 ; Select column and row
1922 D0E0      1696            pop acc
1924 C083      1697            push dph
1926 C082      1697            push dpl
1928 C0E0      1697            push acc
192A 900473    1697            mov dptr, #Clear_Screen
192D 120348    1697            lcall ?Send_Constant_String
1930 D0E0      1697            pop acc
1932 D082      1697            pop dpl
1934 D083      1697            pop dph
1936 C0E0      1698            push acc
1938 7401      1698            mov a, #1
193A 14        1698            dec a
193B 120355    1698            lcall ?Set_Cursor_1 ; Select column and row
193E D0E0      1698            pop acc
1940 C083      1699            push dph
1942 C082      1699            push dpl
1944 C0E0      1699            push acc
1946 9004A6    1699            mov dptr, #Initial_Message_P1
1949 120348    1699            lcall ?Send_Constant_String
194C D0E0      1699            pop acc
194E D082      1699            pop dpl
1950 D083      1699            pop dph
1952 021955    1700            ljmp P1_Cycle
1955           1701            
1955           1702            
1955           1703   P1_Cycle:
1955 12098C    1704            lcall forever
1958 120838    1705            lcall Timer0_Init
195B 120D57    1706            lcall Wait_Random_Time_P1 ; in here, we are continuously checking if someone slaps, if they do, we decrement
195E 12098C    1707            lcall forever
1961 120851    1708       lcall Timer0_HIGH_Init
1964 12098C    1709       lcall forever
1967           1710       ;Wait for slap, if slapped, increment score
1967 120E8E    1711       lcall Wait_Constant_Time_P1 ; in here, we are continuously checking if someone slaps, if they do we increment
196A 12098C    1712       lcall forever
196D 120838    1713       lcall Timer0_Init
1970           1714       ;Wait for slap, if slapped, decrement score
1970 021955    1715       ljmp P1_Cycle
1973           1716            
1973           1717            
1973           1718            
1973           1719   TomAndJerry:
1973           1720   ;140 notes/min ~400 ms
1973           1721   ;Wait_Milli_Seconds(#400)
1973           1722   
1973           1723            ; bar 5
1973 120642    1724            lcall Timer0_Rate_C5_Init
1976 C002      1725            push AR2
1978 7AC8      1725            mov R2, #200
197A 1202CF    1725            lcall ?Wait_Milli_Seconds
197D D002      1725            pop AR2
197F           1725   
197F 120674    1726            lcall Timer0_Rate_D5_Init
1982 C002      1727            push AR2
1984 7AC8      1727            mov R2, #200
1986 1202CF    1727            lcall ?Wait_Milli_Seconds
1989 D002      1727            pop AR2
198B 1205F7    1728            lcall Timer0_Rate_A4_Init
198E C002      1729            push AR2
1990 7AC8      1729            mov R2, #200
1992 1202CF    1729            lcall ?Wait_Milli_Seconds
1995 D002      1729            pop AR2
1997 120642    1730            lcall Timer0_Rate_C5_Init
199A C002      1731            push AR2
199C 7AC8      1731            mov R2, #200
199E 1202CF    1731            lcall ?Wait_Milli_Seconds
19A1 D002      1731            pop AR2
19A3 C002      1732            push AR2
19A5 7AC8      1732            mov R2, #200
19A7 1202CF    1732            lcall ?Wait_Milli_Seconds
19AA D002      1732            pop AR2
19AC 120674    1733            lcall Timer0_Rate_D5_Init
19AF C002      1734            push AR2
19B1 7AC8      1734            mov R2, #200
19B3 1202CF    1734            lcall ?Wait_Milli_Seconds
19B6 D002      1734            pop AR2
19B8 1205F7    1735            lcall Timer0_Rate_A4_Init
19BB C002      1736            push AR2
19BD 7AC8      1736            mov R2, #200
19BF 1202CF    1736            lcall ?Wait_Milli_Seconds
19C2 D002      1736            pop AR2
19C4 120674    1737            lcall Timer0_Rate_D5_Init
19C7 C002      1738            push AR2
19C9 7AC8      1738            mov R2, #200
19CB 1202CF    1738            lcall ?Wait_Milli_Seconds
19CE D002      1738            pop AR2
19D0           1739            
19D0           1740            ;bar 6
19D0 120642    1741            lcall Timer0_Rate_C5_Init
19D3 C002      1742            push AR2
19D5 7AC8      1742            mov R2, #200
19D7 1202CF    1742            lcall ?Wait_Milli_Seconds
19DA D002      1742            pop AR2
19DC 120674    1743            lcall Timer0_Rate_D5_Init
19DF C002      1744            push AR2
19E1 7AC8      1744            mov R2, #200
19E3 1202CF    1744            lcall ?Wait_Milli_Seconds
19E6 D002      1744            pop AR2
19E8 1205F7    1745            lcall Timer0_Rate_A4_Init
19EB C002      1746            push AR2
19ED 7AC8      1746            mov R2, #200
19EF 1202CF    1746            lcall ?Wait_Milli_Seconds
19F2 D002      1746            pop AR2
19F4 120642    1747            lcall Timer0_Rate_C5_Init
19F7 C002      1748            push AR2
19F9 7AC8      1748            mov R2, #200
19FB 1202CF    1748            lcall ?Wait_Milli_Seconds
19FE D002      1748            pop AR2
1A00 C002      1749            push AR2
1A02 7AC8      1749            mov R2, #200
1A04 1202CF    1749            lcall ?Wait_Milli_Seconds
1A07 D002      1749            pop AR2
1A09 1205AC    1750            lcall Timer0_Rate_FS4_Init
1A0C C002      1751            push AR2
1A0E 7AC8      1751            mov R2, #200
1A10 1202CF    1751            lcall ?Wait_Milli_Seconds
1A13 D002      1751            pop AR2
1A15 C002      1752            push AR2
1A17 7AC8      1752            mov R2, #200
1A19 1202CF    1752            lcall ?Wait_Milli_Seconds
1A1C D002      1752            pop AR2
1A1E 120642    1753            lcall Timer0_Rate_C5_Init
1A21 C002      1754            push AR2
1A23 7AC8      1754            mov R2, #200
1A25 1202CF    1754            lcall ?Wait_Milli_Seconds
1A28 D002      1754            pop AR2 ;tied notes
1A2A C002      1755            push AR2
1A2C 7AC8      1755            mov R2, #200
1A2E 1202CF    1755            lcall ?Wait_Milli_Seconds
1A31 D002      1755            pop AR2
1A33           1756            
1A33           1757            ;bar 7
1A33           1758            ;lcall Timer0_Rate_C5_Init
1A33           1759            ;Wait_Milli_Seconds(#200)
1A33 120674    1760            lcall Timer0_Rate_D5_Init
1A36 C002      1761            push AR2
1A38 7AC8      1761            mov R2, #200
1A3A 1202CF    1761            lcall ?Wait_Milli_Seconds
1A3D D002      1761            pop AR2
1A3F 1205C5    1762            lcall Timer0_Rate_G4_Init
1A42 C002      1763            push AR2
1A44 7AC8      1763            mov R2, #200
1A46 1202CF    1763            lcall ?Wait_Milli_Seconds
1A49 D002      1763            pop AR2
1A4B 120642    1764            lcall Timer0_Rate_C5_Init
1A4E C002      1765            push AR2
1A50 7AC8      1765            mov R2, #200
1A52 1202CF    1765            lcall ?Wait_Milli_Seconds
1A55 D002      1765            pop AR2
1A57 C002      1766            push AR2
1A59 7AC8      1766            mov R2, #200
1A5B 1202CF    1766            lcall ?Wait_Milli_Seconds
1A5E D002      1766            pop AR2
1A60 120642    1767            lcall Timer0_Rate_C5_Init
1A63 C002      1768            push AR2
1A65 7AC8      1768            mov R2, #200
1A67 1202CF    1768            lcall ?Wait_Milli_Seconds
1A6A D002      1768            pop AR2
1A6C C002      1769            push AR2
1A6E 7AC8      1769            mov R2, #200
1A70 1202CF    1769            lcall ?Wait_Milli_Seconds
1A73 D002      1769            pop AR2
1A75 120610    1770            lcall Timer0_Rate_AS4_Init
1A78 C002      1771            push AR2
1A7A 7AC8      1771            mov R2, #200
1A7C 1202CF    1771            lcall ?Wait_Milli_Seconds
1A7F D002      1771            pop AR2
1A81           1772            
1A81           1773            ;bar 8
1A81 1205F7    1774            lcall Timer0_Rate_A4_Init
1A84 C002      1775            push AR2
1A86 7AC8      1775            mov R2, #200
1A88 1202CF    1775            lcall ?Wait_Milli_Seconds
1A8B D002      1775            pop AR2
1A8D 120610    1776            lcall Timer0_Rate_AS4_Init
1A90 C002      1777            push AR2
1A92 7AC8      1777            mov R2, #200
1A94 1202CF    1777            lcall ?Wait_Milli_Seconds
1A97 D002      1777            pop AR2
1A99 120642    1778            lcall Timer0_Rate_C5_Init
1A9C C002      1779            push AR2
1A9E 7AC8      1779            mov R2, #200
1AA0 1202CF    1779            lcall ?Wait_Milli_Seconds
1AA3 D002      1779            pop AR2
1AA5 120674    1780            lcall Timer0_Rate_D5_Init
1AA8 C002      1781            push AR2
1AAA 7AC8      1781            mov R2, #200
1AAC 1202CF    1781            lcall ?Wait_Milli_Seconds
1AAF D002      1781            pop AR2
1AB1 1206A6    1782            lcall Timer0_Rate_E5_Init
1AB4 C002      1783            push AR2
1AB6 7AC8      1783            mov R2, #200
1AB8 1202CF    1783            lcall ?Wait_Milli_Seconds
1ABB D002      1783            pop AR2
1ABD 1206BF    1784            lcall Timer0_Rate_F5_Init
1AC0 C002      1785            push AR2
1AC2 7AC8      1785            mov R2, #200
1AC4 1202CF    1785            lcall ?Wait_Milli_Seconds
1AC7 D002      1785            pop AR2
1AC9 120674    1786            lcall Timer0_Rate_D5_Init
1ACC C002      1787            push AR2
1ACE 7AC8      1787            mov R2, #200
1AD0 1202CF    1787            lcall ?Wait_Milli_Seconds
1AD3 D002      1787            pop AR2
1AD5 1206BF    1788            lcall Timer0_Rate_F5_Init
1AD8 C002      1789            push AR2
1ADA 7AC8      1789            mov R2, #200
1ADC 1202CF    1789            lcall ?Wait_Milli_Seconds
1ADF D002      1789            pop AR2
1AE1           1790            
1AE1           1791            ;bar 9
1AE1 1206A6    1792            lcall Timer0_Rate_E5_Init
1AE4 C002      1793            push AR2
1AE6 7AC8      1793            mov R2, #200
1AE8 1202CF    1793            lcall ?Wait_Milli_Seconds
1AEB D002      1793            pop AR2
1AED C002      1794            push AR2
1AEF 7A64      1794            mov R2, #100
1AF1 1202CF    1794            lcall ?Wait_Milli_Seconds
1AF4 D002      1794            pop AR2
1AF6 1206BF    1795            lcall Timer0_Rate_F5_Init
1AF9 C002      1796            push AR2
1AFB 7A64      1796            mov R2, #100
1AFD 1202CF    1796            lcall ?Wait_Milli_Seconds
1B00 D002      1796            pop AR2
1B02 1206F1    1797            lcall Timer0_Rate_G5_Init
1B05 C002      1798            push AR2
1B07 7A64      1798            mov R2, #100
1B09 1202CF    1798            lcall ?Wait_Milli_Seconds
1B0C D002      1798            pop AR2
1B0E 12086A    1799            lcall Timer0_OFF_Init ;Rest
1B11 C002      1800            push AR2
1B13 7A64      1800            mov R2, #100
1B15 1202CF    1800            lcall ?Wait_Milli_Seconds
1B18 D002      1800            pop AR2
1B1A 120642    1801            lcall Timer0_Rate_C5_Init
1B1D C002      1802            push AR2
1B1F 7AC8      1802            mov R2, #200
1B21 1202CF    1802            lcall ?Wait_Milli_Seconds
1B24 D002      1802            pop AR2
1B26 C002      1803            push AR2
1B28 7AC8      1803            mov R2, #200
1B2A 1202CF    1803            lcall ?Wait_Milli_Seconds
1B2D D002      1803            pop AR2
1B2F C002      1804            push AR2
1B31 7A64      1804            mov R2, #100
1B33 1202CF    1804            lcall ?Wait_Milli_Seconds
1B36 D002      1804            pop AR2
1B38 120610    1805            lcall Timer0_Rate_AS4_Init
1B3B C002      1806            push AR2
1B3D 7AC8      1806            mov R2, #200
1B3F 1202CF    1806            lcall ?Wait_Milli_Seconds
1B42 D002      1806            pop AR2
1B44 C002      1807            push AR2
1B46 7AC8      1807            mov R2, #200
1B48 1202CF    1807            lcall ?Wait_Milli_Seconds
1B4B D002      1807            pop AR2
1B4D           1808            
1B4D           1809            ;bar 10
1B4D 120642    1810            lcall Timer0_Rate_C5_Init
1B50 C002      1811            push AR2
1B52 7AC8      1811            mov R2, #200
1B54 1202CF    1811            lcall ?Wait_Milli_Seconds
1B57 D002      1811            pop AR2
1B59 120674    1812            lcall Timer0_Rate_D5_Init
1B5C C002      1813            push AR2
1B5E 7AC8      1813            mov R2, #200
1B60 1202CF    1813            lcall ?Wait_Milli_Seconds
1B63 D002      1813            pop AR2
1B65 1205F7    1814            lcall Timer0_Rate_A4_Init
1B68 C002      1815            push AR2
1B6A 7AC8      1815            mov R2, #200
1B6C 1202CF    1815            lcall ?Wait_Milli_Seconds
1B6F D002      1815            pop AR2
1B71 120642    1816            lcall Timer0_Rate_C5_Init
1B74 C002      1817            push AR2
1B76 7AC8      1817            mov R2, #200
1B78 1202CF    1817            lcall ?Wait_Milli_Seconds
1B7B D002      1817            pop AR2
1B7D C002      1818            push AR2
1B7F 7AC8      1818            mov R2, #200
1B81 1202CF    1818            lcall ?Wait_Milli_Seconds
1B84 D002      1818            pop AR2
1B86 120642    1819            lcall Timer0_Rate_C5_Init
1B89 C002      1820            push AR2
1B8B 7AC8      1820            mov R2, #200
1B8D 1202CF    1820            lcall ?Wait_Milli_Seconds
1B90 D002      1820            pop AR2
1B92 C002      1821            push AR2
1B94 7AC8      1821            mov R2, #200
1B96 1202CF    1821            lcall ?Wait_Milli_Seconds
1B99 D002      1821            pop AR2
1B9B C002      1822            push AR2
1B9D 7AC8      1822            mov R2, #200
1B9F 1202CF    1822            lcall ?Wait_Milli_Seconds
1BA2 D002      1822            pop AR2
1BA4           1823            
1BA4           1824            ;bar 11
1BA4 1206A6    1825            lcall Timer0_Rate_E5_Init
1BA7 C002      1826            push AR2
1BA9 7AC8      1826            mov R2, #200
1BAB 1202CF    1826            lcall ?Wait_Milli_Seconds
1BAE D002      1826            pop AR2
1BB0 1206D8    1827            lcall Timer0_Rate_FS5_Init
1BB3 C002      1828            push AR2
1BB5 7AC8      1828            mov R2, #200
1BB7 1202CF    1828            lcall ?Wait_Milli_Seconds
1BBA D002      1828            pop AR2
1BBC 120642    1829            lcall Timer0_Rate_C5_Init
1BBF C002      1830            push AR2
1BC1 7AC8      1830            mov R2, #200
1BC3 1202CF    1830            lcall ?Wait_Milli_Seconds
1BC6 D002      1830            pop AR2
1BC8 1206A6    1831            lcall Timer0_Rate_E5_Init
1BCB C002      1832            push AR2
1BCD 7AC8      1832            mov R2, #200
1BCF 1202CF    1832            lcall ?Wait_Milli_Seconds
1BD2 D002      1832            pop AR2
1BD4 C002      1833            push AR2
1BD6 7AC8      1833            mov R2, #200
1BD8 1202CF    1833            lcall ?Wait_Milli_Seconds
1BDB D002      1833            pop AR2
1BDD 1206A6    1834            lcall Timer0_Rate_E5_Init
1BE0 C002      1835            push AR2
1BE2 7AC8      1835            mov R2, #200
1BE4 1202CF    1835            lcall ?Wait_Milli_Seconds
1BE7 D002      1835            pop AR2
1BE9 1206A6    1836            lcall Timer0_Rate_E5_Init
1BEC C002      1837            push AR2
1BEE 7AC8      1837            mov R2, #200
1BF0 1202CF    1837            lcall ?Wait_Milli_Seconds
1BF3 D002      1837            pop AR2
1BF5 1206A6    1838            lcall Timer0_Rate_E5_Init
1BF8 C002      1839            push AR2
1BFA 7AC8      1839            mov R2, #200
1BFC 1202CF    1839            lcall ?Wait_Milli_Seconds
1BFF D002      1839            pop AR2
1C01           1840            
1C01           1841            ;bar 12
1C01 1206A6    1842            lcall Timer0_Rate_E5_Init
1C04 C002      1843            push AR2
1C06 7AC8      1843            mov R2, #200
1C08 1202CF    1843            lcall ?Wait_Milli_Seconds
1C0B D002      1843            pop AR2
1C0D 1206D8    1844            lcall Timer0_Rate_FS5_Init
1C10 C002      1845            push AR2
1C12 7AC8      1845            mov R2, #200
1C14 1202CF    1845            lcall ?Wait_Milli_Seconds
1C17 D002      1845            pop AR2
1C19 120674    1846            lcall Timer0_Rate_D5_Init
1C1C C002      1847            push AR2
1C1E 7A64      1847            mov R2, #100
1C20 1202CF    1847            lcall ?Wait_Milli_Seconds
1C23 D002      1847            pop AR2
1C25 1206A6    1848            lcall Timer0_Rate_E5_Init
1C28 C002      1849            push AR2
1C2A 7AC8      1849            mov R2, #200
1C2C 1202CF    1849            lcall ?Wait_Milli_Seconds
1C2F D002      1849            pop AR2
1C31 12065B    1850            lcall Timer0_Rate_CS5_Init
1C34 C002      1851            push AR2
1C36 7AC8      1851            mov R2, #200
1C38 1202CF    1851            lcall ?Wait_Milli_Seconds
1C3B D002      1851            pop AR2
1C3D 120674    1852            lcall Timer0_Rate_D5_Init
1C40 C002      1853            push AR2
1C42 7AC8      1853            mov R2, #200
1C44 1202CF    1853            lcall ?Wait_Milli_Seconds
1C47 D002      1853            pop AR2
1C49 120629    1854            lcall Timer0_Rate_B4_Init
1C4C C002      1855            push AR2
1C4E 7AC8      1855            mov R2, #200
1C50 1202CF    1855            lcall ?Wait_Milli_Seconds
1C53 D002      1855            pop AR2
1C55 120642    1856            lcall Timer0_Rate_C5_Init
1C58 C002      1857            push AR2
1C5A 7AC8      1857            mov R2, #200
1C5C 1202CF    1857            lcall ?Wait_Milli_Seconds
1C5F D002      1857            pop AR2
1C61           1858            
1C61           1859            ;bar 13
1C61 1205F7    1860            lcall Timer0_Rate_A4_Init
1C64 C002      1861            push AR2
1C66 7AC8      1861            mov R2, #200
1C68 1202CF    1861            lcall ?Wait_Milli_Seconds
1C6B D002      1861            pop AR2
1C6D C002      1862            push AR2
1C6F 7A64      1862            mov R2, #100
1C71 1202CF    1862            lcall ?Wait_Milli_Seconds
1C74 D002      1862            pop AR2
1C76 1205DE    1863            lcall Timer0_Rate_GS4_Init
1C79 C002      1864            push AR2
1C7B 7A64      1864            mov R2, #100
1C7D 1202CF    1864            lcall ?Wait_Milli_Seconds
1C80 D002      1864            pop AR2
1C82 1205F7    1865            lcall Timer0_Rate_A4_Init
1C85 C002      1866            push AR2
1C87 7A64      1866            mov R2, #100
1C89 1202CF    1866            lcall ?Wait_Milli_Seconds
1C8C D002      1866            pop AR2
1C8E 12086A    1867            lcall Timer0_OFF_Init
1C91 C002      1868            push AR2
1C93 7A64      1868            mov R2, #100
1C95 1202CF    1868            lcall ?Wait_Milli_Seconds
1C98 D002      1868            pop AR2 ;Rest
1C9A 120642    1869            lcall Timer0_Rate_C5_Init
1C9D C002      1870            push AR2
1C9F 7AC8      1870            mov R2, #200
1CA1 1202CF    1870            lcall ?Wait_Milli_Seconds
1CA4 D002      1870            pop AR2
1CA6 C002      1871            push AR2
1CA8 7AC8      1871            mov R2, #200
1CAA 1202CF    1871            lcall ?Wait_Milli_Seconds
1CAD D002      1871            pop AR2
1CAF C002      1872            push AR2
1CB1 7AC8      1872            mov R2, #200
1CB3 1202CF    1872            lcall ?Wait_Milli_Seconds
1CB6 D002      1872            pop AR2
1CB8 1204FD    1873            lcall Timer0_Rate_B3_Init
1CBB C002      1874            push AR2
1CBD 7A46      1874            mov R2, #70
1CBF 1202CF    1874            lcall ?Wait_Milli_Seconds
1CC2 D002      1874            pop AR2
1CC4 120516    1875            lcall Timer0_Rate_C4_Init
1CC7 C002      1876            push AR2
1CC9 7A50      1876            mov R2, #80
1CCB 1202CF    1876            lcall ?Wait_Milli_Seconds
1CCE D002      1876            pop AR2
1CD0 120548    1877            lcall Timer0_Rate_D4_Init
1CD3 C002      1878            push AR2
1CD5 7A5A      1878            mov R2, #90
1CD7 1202CF    1878            lcall ?Wait_Milli_Seconds
1CDA D002      1878            pop AR2
1CDC 120561    1879            lcall Timer0_Rate_DS4_Init
1CDF C002      1880            push AR2
1CE1 7A64      1880            mov R2, #100
1CE3 1202CF    1880            lcall ?Wait_Milli_Seconds
1CE6 D002      1880            pop AR2
1CE8 12057A    1881            lcall Timer0_Rate_E4_Init
1CEB C002      1882            push AR2
1CED 7A64      1882            mov R2, #100
1CEF 1202CF    1882            lcall ?Wait_Milli_Seconds
1CF2 D002      1882            pop AR2
1CF4 120593    1883            lcall Timer0_Rate_F4_Init
1CF7 C002      1884            push AR2
1CF9 7A64      1884            mov R2, #100
1CFB 1202CF    1884            lcall ?Wait_Milli_Seconds
1CFE D002      1884            pop AR2
1D00           1885            
1D00           1886            ;bar 14
1D00 120642    1887            lcall Timer0_Rate_C5_Init
1D03 C002      1888            push AR2
1D05 7AC8      1888            mov R2, #200
1D07 1202CF    1888            lcall ?Wait_Milli_Seconds
1D0A D002      1888            pop AR2
1D0C C002      1889            push AR2
1D0E 7AC8      1889            mov R2, #200
1D10 1202CF    1889            lcall ?Wait_Milli_Seconds
1D13 D002      1889            pop AR2
1D15 120674    1890            lcall Timer0_Rate_D5_Init
1D18 C002      1891            push AR2
1D1A 7AC8      1891            mov R2, #200
1D1C 1202CF    1891            lcall ?Wait_Milli_Seconds
1D1F D002      1891            pop AR2
1D21 C002      1892            push AR2
1D23 7AC8      1892            mov R2, #200
1D25 1202CF    1892            lcall ?Wait_Milli_Seconds
1D28 D002      1892            pop AR2
1D2A 1205F7    1893            lcall Timer0_Rate_A4_Init
1D2D C002      1894            push AR2
1D2F 7AC8      1894            mov R2, #200
1D31 1202CF    1894            lcall ?Wait_Milli_Seconds
1D34 D002      1894            pop AR2
1D36 C002      1895            push AR2
1D38 7AC8      1895            mov R2, #200
1D3A 1202CF    1895            lcall ?Wait_Milli_Seconds
1D3D D002      1895            pop AR2
1D3F 120642    1896            lcall Timer0_Rate_C5_Init
1D42 C002      1897            push AR2
1D44 7AC8      1897            mov R2, #200
1D46 1202CF    1897            lcall ?Wait_Milli_Seconds
1D49 D002      1897            pop AR2
1D4B C002      1898            push AR2
1D4D 7AC8      1898            mov R2, #200
1D4F 1202CF    1898            lcall ?Wait_Milli_Seconds
1D52 D002      1898            pop AR2
1D54 C002      1899            push AR2
1D56 7AC8      1899            mov R2, #200
1D58 1202CF    1899            lcall ?Wait_Milli_Seconds
1D5B D002      1899            pop AR2
1D5D C002      1900            push AR2
1D5F 7AC8      1900            mov R2, #200
1D61 1202CF    1900            lcall ?Wait_Milli_Seconds
1D64 D002      1900            pop AR2
1D66 C002      1901            push AR2
1D68 7AC8      1901            mov R2, #200
1D6A 1202CF    1901            lcall ?Wait_Milli_Seconds
1D6D D002      1901            pop AR2
1D6F C002      1902            push AR2
1D71 7AC8      1902            mov R2, #200
1D73 1202CF    1902            lcall ?Wait_Milli_Seconds
1D76 D002      1902            pop AR2
1D78 C002      1903            push AR2
1D7A 7AC8      1903            mov R2, #200
1D7C 1202CF    1903            lcall ?Wait_Milli_Seconds
1D7F D002      1903            pop AR2
1D81 C002      1904            push AR2
1D83 7AC8      1904            mov R2, #200
1D85 1202CF    1904            lcall ?Wait_Milli_Seconds
1D88 D002      1904            pop AR2
1D8A 12086A    1905            lcall TIMER0_OFF_Init
1D8D C002      1906            push AR2
1D8F 7AC8      1906            mov R2, #200
1D91 1202CF    1906            lcall ?Wait_Milli_Seconds
1D94 D002      1906            pop AR2
1D96 C002      1907            push AR2
1D98 7AC8      1907            mov R2, #200
1D9A 1202CF    1907            lcall ?Wait_Milli_Seconds
1D9D D002      1907            pop AR2
1D9F           1908            
1D9F           1909            ;bar 15
1D9F 120610    1910            lcall Timer0_Rate_AS4_Init
1DA2 C002      1911            push AR2
1DA4 7AC8      1911            mov R2, #200
1DA6 1202CF    1911            lcall ?Wait_Milli_Seconds
1DA9 D002      1911            pop AR2
1DAB C002      1912            push AR2
1DAD 7AC8      1912            mov R2, #200
1DAF 1202CF    1912            lcall ?Wait_Milli_Seconds
1DB2 D002      1912            pop AR2
1DB4 120642    1913            lcall Timer0_Rate_C5_Init
1DB7 C002      1914            push AR2
1DB9 7AC8      1914            mov R2, #200
1DBB 1202CF    1914            lcall ?Wait_Milli_Seconds
1DBE D002      1914            pop AR2
1DC0 C002      1915            push AR2
1DC2 7AC8      1915            mov R2, #200
1DC4 1202CF    1915            lcall ?Wait_Milli_Seconds
1DC7 D002      1915            pop AR2
1DC9 1205C5    1916            lcall Timer0_Rate_G4_Init
1DCC C002      1917            push AR2
1DCE 7AC8      1917            mov R2, #200
1DD0 1202CF    1917            lcall ?Wait_Milli_Seconds
1DD3 D002      1917            pop AR2
1DD5 C002      1918            push AR2
1DD7 7AC8      1918            mov R2, #200
1DD9 1202CF    1918            lcall ?Wait_Milli_Seconds
1DDC D002      1918            pop AR2
1DDE 1205F7    1919            lcall Timer0_Rate_A4_Init
1DE1 C002      1920            push AR2
1DE3 7AC8      1920            mov R2, #200
1DE5 1202CF    1920            lcall ?Wait_Milli_Seconds
1DE8 D002      1920            pop AR2
1DEA C002      1921            push AR2
1DEC 7AC8      1921            mov R2, #200
1DEE 1202CF    1921            lcall ?Wait_Milli_Seconds
1DF1 D002      1921            pop AR2
1DF3 C002      1922            push AR2
1DF5 7AC8      1922            mov R2, #200
1DF7 1202CF    1922            lcall ?Wait_Milli_Seconds
1DFA D002      1922            pop AR2
1DFC C002      1923            push AR2
1DFE 7AC8      1923            mov R2, #200
1E00 1202CF    1923            lcall ?Wait_Milli_Seconds
1E03 D002      1923            pop AR2
1E05 120629    1924            lcall Timer0_Rate_B4_Init
1E08 C002      1925            push AR2
1E0A 7AC8      1925            mov R2, #200
1E0C 1202CF    1925            lcall ?Wait_Milli_Seconds
1E0F D002      1925            pop AR2
1E11 C002      1926            push AR2
1E13 7AC8      1926            mov R2, #200
1E15 1202CF    1926            lcall ?Wait_Milli_Seconds
1E18 D002      1926            pop AR2
1E1A 120642    1927            lcall Timer0_Rate_C5_Init
1E1D C002      1928            push AR2
1E1F 7AC8      1928            mov R2, #200
1E21 1202CF    1928            lcall ?Wait_Milli_Seconds
1E24 D002      1928            pop AR2
1E26 C002      1929            push AR2
1E28 7AC8      1929            mov R2, #200
1E2A 1202CF    1929            lcall ?Wait_Milli_Seconds
1E2D D002      1929            pop AR2
1E2F C002      1930            push AR2
1E31 7AC8      1930            mov R2, #200
1E33 1202CF    1930            lcall ?Wait_Milli_Seconds
1E36 D002      1930            pop AR2
1E38 C002      1931            push AR2
1E3A 7AC8      1931            mov R2, #200
1E3C 1202CF    1931            lcall ?Wait_Milli_Seconds
1E3F D002      1931            pop AR2
1E41           1932            
1E41           1933            ;bar 16
1E41 1205C5    1934            lcall Timer0_Rate_G4_Init
1E44 C002      1935            push AR2
1E46 7AC8      1935            mov R2, #200
1E48 1202CF    1935            lcall ?Wait_Milli_Seconds
1E4B D002      1935            pop AR2
1E4D C002      1936            push AR2
1E4F 7AC8      1936            mov R2, #200
1E51 1202CF    1936            lcall ?Wait_Milli_Seconds
1E54 D002      1936            pop AR2
1E56 C002      1937            push AR2
1E58 7AC8      1937            mov R2, #200
1E5A 1202CF    1937            lcall ?Wait_Milli_Seconds
1E5D D002      1937            pop AR2
1E5F C002      1938            push AR2
1E61 7AC8      1938            mov R2, #200
1E63 1202CF    1938            lcall ?Wait_Milli_Seconds
1E66 D002      1938            pop AR2
1E68 C002      1939            push AR2
1E6A 7AC8      1939            mov R2, #200
1E6C 1202CF    1939            lcall ?Wait_Milli_Seconds
1E6F D002      1939            pop AR2
1E71 C002      1940            push AR2
1E73 7AC8      1940            mov R2, #200
1E75 1202CF    1940            lcall ?Wait_Milli_Seconds
1E78 D002      1940            pop AR2
1E7A C002      1941            push AR2
1E7C 7AC8      1941            mov R2, #200
1E7E 1202CF    1941            lcall ?Wait_Milli_Seconds
1E81 D002      1941            pop AR2
1E83 C002      1942            push AR2
1E85 7AC8      1942            mov R2, #200
1E87 1202CF    1942            lcall ?Wait_Milli_Seconds
1E8A D002      1942            pop AR2
1E8C 120593    1943            lcall Timer0_Rate_F4_Init
1E8F C002      1944            push AR2
1E91 7AC8      1944            mov R2, #200
1E93 1202CF    1944            lcall ?Wait_Milli_Seconds
1E96 D002      1944            pop AR2
1E98 C002      1945            push AR2
1E9A 7AC8      1945            mov R2, #200
1E9C 1202CF    1945            lcall ?Wait_Milli_Seconds
1E9F D002      1945            pop AR2
1EA1 C002      1946            push AR2
1EA3 7AC8      1946            mov R2, #200
1EA5 1202CF    1946            lcall ?Wait_Milli_Seconds
1EA8 D002      1946            pop AR2
1EAA C002      1947            push AR2
1EAC 7AC8      1947            mov R2, #200
1EAE 1202CF    1947            lcall ?Wait_Milli_Seconds
1EB1 D002      1947            pop AR2
1EB3 C002      1948            push AR2
1EB5 7AC8      1948            mov R2, #200
1EB7 1202CF    1948            lcall ?Wait_Milli_Seconds
1EBA D002      1948            pop AR2
1EBC C002      1949            push AR2
1EBE 7AC8      1949            mov R2, #200
1EC0 1202CF    1949            lcall ?Wait_Milli_Seconds
1EC3 D002      1949            pop AR2
1EC5 C002      1950            push AR2
1EC7 7AC8      1950            mov R2, #200
1EC9 1202CF    1950            lcall ?Wait_Milli_Seconds
1ECC D002      1950            pop AR2
1ECE C002      1951            push AR2
1ED0 7AC8      1951            mov R2, #200
1ED2 1202CF    1951            lcall ?Wait_Milli_Seconds
1ED5 D002      1951            pop AR2
1ED7 22        1952            ret
1ED8           1953   end
